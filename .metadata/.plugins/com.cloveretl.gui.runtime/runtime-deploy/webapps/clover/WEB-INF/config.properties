#
# This configuration file contains default environment properties.
# This file should be modified only due to good reason.
# Use external configuration files to override these default values. 
#
datasource.verifySchema=true

datasource.tries=4
# Delay between retry in seconds
datasource.tries.delay=10

# JNDI | JDBC
datasource.type=JDBC

# if clover.datasource is set to JNDI, server tries to connect to this DS  
datasource.jndiName=java:comp/env/jdbc/clover_server

# 
# following JDBC properties (except jdbc.dialect) are applied only if clover.datasource is set to JDBC 
#

# ========================= Derby embedded DB
# by default, DB files are stored in working directory
# set system property "derby.system.home" to set your own path
# you can specify it by this JVM execution parameter: "-Dderby.system.home={derby_DB_files_root}"
jdbc.driverClassName=org.apache.derby.jdbc.EmbeddedDriver
jdbc.dialect=com.cloveretl.server.dbschema.DerbyTableIdDialect
#jdbc.dialect=org.hibernate.dialect.DerbyDialect
jdbc.url=jdbc:derby:databases/cloverDb102;create=true
jdbc.username=
jdbc.password=
jdbc.specific.derby.home=

# ========================= Connection to data manager DB
datamanager.datasource.tries=4
datamanager.datasource.tries.delay=10

datamanager.datasource.type=JDBC

# required when type is JNDI
datamanager.datasource.jndiName=java:comp/env/jdbc/data_manager_storage

# required when type is JDBC
datamanager.jdbc.driverClassName=org.apache.derby.jdbc.EmbeddedDriver
datamanager.jdbc.url=jdbc:derby:databases/cloverDb103;create=true
datamanager.jdbc.username=
datamanager.jdbc.password=



# list of properties which won't be accessible outside of the facade
# values will be replaced by by asterisks - '*****'
private.properties=*password*, security.secure_passwd.table.secure_passwd, cluster.jgroups.protocol.AUTH.value

# properties file with absolute path; if empty, server uses default which is packed with clover engine
engine.config.file=
# directory or zip file with additional external engine plugins - not a substitute for plugins packed in WAR, but complement
engine.plugins.additional.src=
# directories (comma separated) with core engine plugins - if specified, it's substitute for plugins packed in WAR
engine.plugins.core.src=
# if set to true, all plugins must be initialized successfully, otherwise the exception is thrown and clover server doesn't start
# it's useful during development when plugins directory may contain many directories, not just engine plugins 
engine.plugins.all_must_be_initialized=true

# if true, debug window is displayed
clover.inDevelopment=false
clover.showSql=false
# used in log messages where it's necessary to name the product name
logging.project_name=CloverDX
#root dir of tempspaces directory
tempspaces.dir=${sys:java.io.tmpdir}
# name of default subdirectory for all server logs 
# don't specify absolute path; use properties which are intended for absolute path  
logging.default_subdir=cloverlogs
#Sizes of memory log4j appenders
logging.mem_appender.COMMON.size_limit=500
logging.mem_appender.WORKER.size_limit=500
logging.mem_appender.CLUSTER.size_limit=500
logging.mem_appender.AUDIT.size_limit=100
logging.mem_appender.SERVER_INTEGRATION.size_limit=100
logging.mem_appender.USER_ACTION.size_limit=100
logging.mem_appender.DATA_SERVICES.size_limit=100
logging.mem_appender.PERFORMANCE.size_limit=500
logging.mem_appender.JOB_QUEUE.size_limit=500
logging.mem_appender.MONITOR.size_limit=500
#Pattern layouts of memory log4j appenders
logging.mem_appender.COMMON.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS}[%15.15t] %-5p %-3X{runId} %m%n
logging.mem_appender.WORKER.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS}[%15.15t] %-5p %-3X{runId} %m%n
logging.mem_appender.CLUSTER.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS}[%15.15t] %-5p %-3X{runId} %m%n
logging.mem_appender.AUDIT.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS} %X{IP} %m%n
logging.mem_appender.SERVER_INTEGRATION.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS} %X{IP} %m%n
logging.mem_appender.USER_ACTION.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS} %X{IP} %m%n
logging.mem_appender.DATA_SERVICES.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS} %X{IP} %m%n
logging.mem_appender.PERFORMANCE.pattern_layout={ %m }%n
logging.mem_appender.JOB_QUEUE.pattern_layout={ %m }%n
logging.mem_appender.MONITOR.pattern_layout=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %m%n
#switch on/off logging serverFacade and JDBC proxy activity
logging.logger.server_audit.enabled=false
logging.logger.server_integration.enabled=true
#switch on/off logging of system performance
logging.logger.performance.enabled=true
#Periodic checking of mapped memory buffer for incomming performance info from worker [in miliseconds]
logging.logger.performance.checkInterval=100

#switch on/off logging of server information. It is used when server is installed by installer
logging.server_start_info.enabled=false

logging.appender.jobs.pattern_layout=%d %-5p %-3X{runId} [%t] %m%n
logging.appender.jobs.encoding=UTF-8

# name of default subdirectory for server tmp files; it's relative to the path specified by system property "java.io.tmpdir" 
temp.default_subdir=clovertmp

# default for graph config properties
executor.tracking_interval=2000
# max_running_concurrently is actually means pool size
executor.log_level=INFO
executor.max_running_concurrently=0
executor.enqueue_executions=false
executor.classpath=
executor.skip_check_config=true
executor.verbose_mode=false
executor.use_jmx=true
executor.debug_mode=false
executor.use_local_context_url=false
executor.jobflow_token_tracking=true
executor.delete_obsolete_temp_files=false
executor.max_job_tree_depth=32
executor.classloader_caching=false
executor.worker_execution=true

# max size of batch for deleting runRecords etc.
task.archivator.batch_size=500
# timeout of remote calls from archivator job to other nodes [ms]
task.archivator.remote_call.timeout=1800000
task.archivator.archive_file_prefix=cloverArchive_

#timeout for tasks executed by JmsEventListener
task.jms.callback.timeout=3600000

#timeout for initialization of event listeners (which are node dependent)
eventlistener.init.timeout=30000

#interval for aggregation of event listeners [minutes]
eventlistener.aggregator.interval=1

# there are always at least "corePoolSize" threads (running or idling)
threadManager.pool.corePoolSize=4
# new task which doesn't have any thread available, is enqueued
threadManager.pool.queueCapacity=0
# if queue is full, task is enqueued and new thread(up to this limit) is created for the first task in the queue
threadManager.pool.maxPoolSize=8192
# core threads are kept in the pool ...
threadManager.pool.allowCoreThreadTimeOut=false
threadManager.pool.keepAliveSeconds=20

# Persist run record of a "view data" minigraph. False by default, set to true 
# for example for security purposes (to be able to inspect even the "view data" minigraph history).
graph.viewData.persist=false
graph.logs_path=
# param to achieve compatibility with previous versions of cloverETL Server (up to 2.9.2). If it's true, all event params are passed to the graph.
graph.pass_event_params_to_graph_in_old_style=false

# enables SandboxURLStreamHandlerFactory, CLS-1169
sandbox.url.handler.enabled=false

sandboxes.access.check.boundaries.enabled=true

# OpenSSH configuration file
openssh.config.file=

# 4 hours in millis 
security.session.validity=14400000
security.session.exchange.limit=360000
security.runtime_mode.alternative_authentication.feature_list=/info.jsp
security.basic_authentication.features_list=/groovy;/request_processor;/simpleHttpApi;/data-service;/downloadStorage;/downloadFile;/uploadSandboxFile;/uploadSandboxZip;/downloadLog;/webdav;/memory.jsp;/mbeans.jsp;/info.jsp;/threadDump.jsp
security.digest_authentication.features_list=
security.alternative_authentication.features_list=/downloadStorage;/downloadBatch;/downloadFile;/uploadSandboxFile;/uploadSandboxZip;/downloadLog;/clusterDataPipe;/remoteEdgeDataSource;/reverseDataTransfer;/downloadEdgeDebugData;/upload;/download
security.basic_authentication.realm=CloverDX Server
security.digest_authentication.storeA1.enabled=false
security.digest_authentication.realm=CloverDX Server
security.digest_authentication.nonce_validity=300

# ================ Setup of user lockout after number of failed logins
# Number of failed login attempts after which a next failed login attempt will lock the user
# 0 means feature is switched off
# default suggested value is 5 
security.lockout.login.attempts=5
# Periods are specified in seconds
# Period of time during which the failed login attempts are counted
# Default is 30s (5 min)
security.lockout.reset.period=300
# Period of time after which a successful login attempt will unlock user
# Default is 300s (5 min)
security.lockout.unlock.period=300

# Strong password policy - min 8 char, min 1 letter and 1 number
security.password.policy=true

# default domain assigned to the clover users - don't change this to LDAP
security.default_domain=clover

# list of user domains which are allowed to login (LDAP, SAML)
# case is ignored
security.authentication.allowed_domains=clover

# First time login using LDAP creates a new clover user account
security.ldap.user_autocreate=false
# New user created in LDAP login is added to this default user group (if it is set)
security.ldap.default_user_group=

security.ldap.ctx_factory=com.sun.jndi.ldap.LdapCtxFactory
security.ldap.timeout=5000
security.ldap.records_limit=2000
# user DN pattern to just login
security.ldap.user_dn_pattern=
# Referral:
# * alternative for system property -Djava.naming.referral
# * possible values: follow | ignore | throw 
# * If this property is not specified, the default is determined by the provider
security.ldap.referral=
security.ldap.ssl.enabled=false

# ldap://hostname:port
security.ldap.url=
security.ldap.userDN=cn=Manager,dc=company,dc=com
security.ldap.password=secret
# searching for user by username
security.ldap.user_search.base=dc=company,dc=com
# filter must return just 1 result
# ${username} is placeholder for username specified by user
security.ldap.user_search.filter=(sn=$${username})
# SUBTREE | ONELEVEL | OBJECT
security.ldap.user_search.scope=subtree

security.ldap.user_search.attribute.firstname=fn
security.ldap.user_search.attribute.lastname=sn
security.ldap.user_search.attribute.email=mail
security.ldap.user_search.attribute.groups=

# searching for groups which the user is member of ...
security.ldap.groups_search.base=dc=company,dc=com
security.ldap.groups_search.filter=(&(objectClass=groupOfNames)(member=$${userDN}))
security.ldap.groups_search.scope=subtree
security.ldap.groups_search.attribute.group_code=cn

# URL to retrieve identity provider's metadata
# e.g. https://login.microsoftonline.com/<tenant>/FederationMetadata/2007-06/FederationMetadata.xml
security.saml.idp_metadata_url=
# If the IdP metadata URL uses HTTPS, SSL certificate validation can be disabled
security.saml.idp_metadata_url_disable_ssl_validation=false
# Preferred provider entity ID if the metadata contain more than one identity provider 
security.saml.metadata.idp_entity_id=
# If available on IdP metadata, use that nameIdFormat, e.g. urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
security.saml.metadata.name_id_format=
#  Identifier of the SP entity  (must be a URI), e.g https://<tenant>/<app>
security.saml.sp_entity_id=
# URL Location where the <Response> from the IdP will be returned
security.saml.sp_assertion_consumer_url=
# Specifies constraints on the name identifier to be used to represent the requested subject.
security.saml.sp_nameid_format=
# Identifier of the IdP entity  (must be a URI)
security.saml.idp_entity_id=
# URL Target of the IdP where the SP will send the Authentication Request Message
security.saml.idp_sso_service_url=
# Public x509 certificate of the IdP
security.saml.idp_x509cert=
# Additional public certificate
#security.saml.idp_x509cert_multi.0=
# URL Target of the IdP where the SP will send the LogutRequest Message
security.saml.idp_slo_service_url=
# Create a user for saml login if not associated with existing user
security.saml.user_autocreate=false
# User group for automatically created user account after saml login 
security.saml.default_user_group=
# Whether server should send LogoutResponse in response to IdP's LogoutRequest
security.saml.send_logout_response=true
# Whether authentication will fail when LoginResponse is unsigned when it should be signed
security.saml.strict=true

security.job_parameters.encryptor.master_password_encryption.password=clover
#Default provider and algorithm settings.
security.job_parameters.encryptor.algorithm=PBEWithMD5AndDES
security.job_parameters.encryptor.providerClassName=
#Bouncy Castle JCE provider and algorithm settings.
#security.job_parameters.encryptor.algorithm=PBEWITHSHA256AND256BITAES-CBC-BC
#security.job_parameters.encryptor.providerClassName=org.bouncycastle.jce.provider.BouncyCastleProvider

security.config_properties.encryptor.algorithm=
security.config_properties.encryptor.providerClassName=

# comma-separated list of system properties available via webservice API
security.available_system_properties=java.vendor,java.version,java.specification.version

# Absolute path to license file on server file system.
#license.file=/path/license.dat
# Absolute path to directory containing license files on server file system.
#license.dir=/path/license/directory
# Request to clear all licenses from the DB during server start.
license.clear=false

# explicit specification of file for persistent events queue
# if not specified, [user.home]/cloverData/eventsQueue.data, where [user.home] is standard system property. 
#events_queue.persistent_file=/tmp/eventsQueue.dat

clover.smtp.authentication=false
clover.smtp.host=localhost
clover.smtp.port=25
clover.smtp.username=
clover.smtp.password=
clover.smtp.sender=
clover.smtp.transport.protocol=smtps
# Timeout in miliseconds(default). Time can be set with a sufix 's' for seconds, 'm' for minutes, 'h' for hours etc.
clover.smtp.timeout=5000
# properties with following prefix are added to the Properties instance passed to the mailer (prefix is removed) 
#clover.smtp.additional.

# Clover Server JMX MBean is always exposed in default JMX server. It's possible to specify extra JMX servers by following properties:    
# Extra URL of HTTP JMX server, where should be Clover Server JMX MBean exposed 
#clover.jmx.http.url=service:jmx:hessian://localhost:8080/clover/jmx
# Extra URL of RMI JMX server, where should be Clover Server JMX MBean exposed 
#clover.jmx.rmi.url=service:jmx:rmi:///jndi/rmi://localhost:8686/jmxrmi
# Extra URL of MP JMX server, where should be Clover Server JMX MBean exposed 
#clover.jmx.mp.url=service:jmx:jmxmp://localhost:9875
clover.jmx.mp.url=

#clover.persistence.jpaAdapter=org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter
#clover.persistence.jpaAdapter=org.springframework.orm.jpa.vendor.OracleTopLinkJpaVendorAdapter
persistence.useSecondLevelCache=true
persistence.useQueryCache=false
persistence.descriptor.location=/WEB-INF/persistence.xml
persistence.hbm2ddl.auto=none
persistence.generateDdl=false

runtime.embedded.enabled=false

instance.name=CloverDX Server

# periodicity of jobs checks
jobs.check.interval=30000
# RuntimeEnv of the done job is held in the memory for this amount of millis ...
jobs.done.remove.threshold.interval=20000
# RuntimeEnv with last update older than this interval (10 minutes) are forcibly released - job result is UNKNOWN afterwards
jobs.forced.runtime.env.release.interval=600000

# timeout (in milliseconds) for releasing of TransformationGraph and temp files (it is done in a separate thread, see  CLO-18930)
job.release.thread.timeout=30000

# periodicity of files checks - file event listeners (in millis)
clover.event.fileCheckMinInterval=1000
#FileEventListeners thread pool size
clover.event.file.threadpool.size=10
#FileEventListeners thread timeout in seconds
clover.event.file.check.timeoutSeconds = 60

# periodicity of groovy checks - groovy event listeners (in millis)
clover.event.groovyCheckMinInterval=1000
# periodicity of Kafka consumer poll operation (in millis)
clover.event.kafkaPollInterval=60000

# maximum size of support package ZIP file (in bytes, default: 50 MB)
server.maxSupportPackageSize=52428800

dbPatches.location=/WEB-INF/dbpatches
quartz.config.location=/WEB-INF/quartz.properties

license.display_header=true

installer.basic.config.location=/WEB-INF/installer.basic.properties

#use to override installers's properties:
installer.basic.additional.config.location=

installer.stress.config.location=/WEB-INF/installer.stress.properties

installer.BasicGroupsInstaller.enabled=true
installer.EveryoneGroupInstaller.enabled=true
installer.AdminUserInstaller.enabled=true
installer.RuntimeUserInstaller.enabled=false
installer.BundledSandboxesInstaller.enabled=true
installer.LibraryRepositoryInstaller.enabled=true
installer.FreshBundledSandboxesInstaller.enabled=false
installer.TemplatesInstaller.enabled=true
installer.ArchivatorInstaller.enabled=true
installer.DataManagerInstaller.enabled=true
installer.SharedSandboxesInstaller.enabled=${sandboxes.autoimport}
installer.LibraryInstaller.enabled=true
installer.WorkspaceInstaller.enabled=${sandboxes.autoimport}
installer.TestInstaller.enabled=false
installer.LocalSandboxesInstaller.enabled=false
installer.PartitionedSandboxesInstaller.enabled=false
installer.TestStressTestInstaller.enabled=false
installer.TestOAuth2Installer.enabled=false
installer.MasterPasswdInstaller.enabled=true
installer.MasterPasswdTestInstaller.enabled=false
installer.ConfigurationInstaller.enabled=true
installer.SandboxConfigurationInstaller.enabled=true

# Automatically import configuration from this file, if it exists
configuration.autoimport.file=

# URL of CloverDX public library repository
public.marketplace.url=az-blob://cloverdx.blob.core.windows.net
# Observe file of CloverDX public library repository
public.marketplace.file=/marketplace-repository
# Protocol of CloverDX public library repository
public.marketplace.protocol=AZ-BLOB-CLIENT-SECRET
# Name of CloverDX public library repository
public.marketplace.name=CloverDX Marketplace

# Automatically import master password from this file, if it exists
masterpassword.autoimport.file=

startup.validation.cluster.derby.enabled=true

# when the depth is not specified, the default is supposed to be infinite; 
# however it's  necessary to set some limit, otherwise the webDav client might overload the server 
webDav.method.propfind.maxDepth=40

# the maximum size (in bytes) of a file that can be displayed/edited in web GUI
webGui.maxViewableFileSize=65536
webGui.maxEditableFileSize=65536
webGui.displayEnvironmentVariables=true
webGui.displaySystemProperties=true
webGui.displayJvmInfo=true

# Differentiate between server instances by adding an instance indicator to the header above the menu
# Label for instance e.g: prod|test|eval
#webGui.instance.label = prod
# Color choices: green|blue|yellow|red if not set the background color will be the same as the header
#webGui.instance.color = green

# comma separated list of CloverDX Server properties, which are resolvable by property resolver (may be used as placeholders in e.g. sandbox root paths) 
properties_resolver.placeholders.server_props_list_default=sandboxes.home,sandboxes.home.local,sandboxes.home.partitioned,user.data.home,clover.home,libraries.home,workspaces.home

# empty value means that the decision is on the license
cluster.enabled=false
cluster.management.enabled=false
cluster.node.id=node01
# interval for multicast of node info 
cluster.node.sendinfo.interval=2000
cluster.node.sendinfo.min_interval=500
# heart-beat NodeInfo instances are kept for this num of millis: 
cluster.node.sendinfo.history.interval=240000
cluster.node.sendinfo.full.interval=20000

# node statistics interval in hours
cluster.node.sendinfo.stats.interval=24

# interval for setting node as invalid - if no nodeInfo came in this interval, node will be marked as invalid 
cluster.node.remove.interval=50000
# periodicity of cluster node checks (in millis) - node touches DB to prove it's running 
cluster.node.check.checkMinInterval=20000
# time (in ms) the node has to be accessible to be forcibly resumed
cluster.node.check.intervalBeforeAutoresume=120000
# how many times can a node to autoresume itself
cluster.node.check.maxAutoresumeCount=3
# time (in minutes) after maxAutoresumeCount  will be reset
cluster.node.check.intervalResetAutoresumeCount=240

# periodicity of sandbox home checks (in millis)
sandboxes.home.check.checkMinInterval=20000
# timeout (in millis) for writing timestamp file in the sandbox home 
sandboxes.home.check.filewrite.timeout=600000

cluster.node.touch.interval=20000
# when some node excedes this interval (in millis) from the last touch of DB, it may be considered as dead
cluster.node.touch.forced_stop.interval=60000
# The same as previous, but it's applied only when the node claims it's starting - thus the allowed lag may be much longer
cluster.node.touch.forced_stop.startup.interval=300000
# If enabled, jobs running on the node with the "forced stop" status are solved (status changed to unknown and event dispatched - parent jobs consider it as error)
cluster.node.touch.forced_stop.solve_running_jobs.enabled=true
# time the node has to re-init async messaging
cluster.node.check.messagingReinitLimit=60000
# path, where all shared sandboxes are stored on this node

# local and partitioned sandboxes have it's own obvious path, but paths of sandboxes shared among more node might be ambigous  
# deprecated
cluster.shared_sandboxes_path=

# these config properties aren't used directly, only as placeholder in text fields representing filesystem path
# clover.home=${user.data.home}/CloverDX 
sandboxes.home=${clover.home}/sandboxes
sandboxes.home.local=${clover.home}/sandboxes-local
sandboxes.home.partitioned=${clover.home}/sandboxes-partitioned
#folders matching these patterns will be ignored within a sandbox (delimited by semicolon)
sandboxes.ignored.dir.patterns=

# automatically import sandboxes located in ${sandboxes.home}
sandboxes.autoimport=false

# suffix of the temporary file used for atomic file upload
sandboxes.upload.temporary_file.suffix=.clover.upload.part

# Home for libraries
libraries.home=${sandboxes.home}/libraries

# Home for workspaces
workspaces.home=${sandboxes.home}

# max allowed time shift between node and database server; if time shift exceeds this, warning message is displayed
cluster.max_allowed_time_shift_between_nodes=2000

# timeout of HttpURLConnection.readTimeout
# if synch connection to another node can't be finished in this interval, node may be suspended
cluster.sync.connection.readTimeout=90000
# if synch connection to another node can't be established in this interval, node may be suspended
cluster.sync.connection.connectTimeout=7000
# read timeout for synchronous node info retrieval
cluster.sync.connection.nodeInfo.readTimeout=5000
# connection timeout for synchronous node info retrieval
cluster.sync.connection.nodeInfo.connectTimeout=5000

cluster.reverseDataTransfer.connection.readTimeout=300000

# Config for probabilistic load balancer. Uses memory and CPU utilization data from nodes to compute nodes
# execution probabilities; incoming jobs are then sent to individual nodes based on these probabilities.
# Memory weight multiplier for WeightedSum formula.
cluster.lb.memory.weight=3
# Memory ratio exponent. Changes linear probability dependency on available memory to exponential dependency.
# For example free memory ratio 0.1^3 yields to number 0.001 in the formula, but 0.9^3 yields to 0.729.
cluster.lb.memory.exponent=3
# Memory cutoff threshold. A number between 0 and 1.
# Prefers nodes with lower memory utilization than this limit (0 is 0% utilization, 1 is 100%).
cluster.lb.memory.limit=0.9

# CPU weight multiplier for WeightedSum formula.
cluster.lb.cpu.weight=1
# CPU ratio exponent. Changes linear probability dependency on available CPU to exponential dependency.
# For example a difference between free CPU ratios 0.25 (75% utilization) and 0.20 (80% utilization) can have different
# weight than a difference between ratios 0.95 (5% utilization) and 0.90 (10% utilization), while both differ in 0.05.
cluster.lb.cpu.exponent=1
# CPU cutoff threshold. A number between 0 and 1.
# Prefers nodes with lower CPU utilization than this limit (0 is 0% utilization, 1 is 100%).
cluster.lb.cpu.limit=0.9

cluster.messaging.multicast.impl=com.cloveretl.server.cluster.JGroupsAsyncMessaging
# IP address of local eth adapter, which should be used for broadcasting
cluster.jgroups.bind_address=127.0.0.1
# port where jGroups listen
cluster.jgroups.start_port=7800
# IP address of the member usable from the other cluster nodes; leave empty when the bind_address is sufficient 
cluster.jgroups.external_address=
# port of the jgroups connector usable from the other cluster nodes; leave empty when the start_port is sufficient
cluster.jgroups.external_port=

# list of IP addresses (with port) where we expect running app with jGroups; i.e. like this: localhost[5555],localhost[5556]  
cluster.jgroups.tcpping.initial_hosts=
# name of multicast group 
cluster.group.name=cloverCluster
# URL to jGroups config file
cluster.jgroups.config_file=/WEB-INF/jgroups-tcp.xml

cluster.jgroups.protocol.NAKACK.gc_lag=10000
# how long are messages for unreachable node kept in the xmit_table (in ms)
cluster.jgroups.protocol.NAKACK.xmit_table_obsolete_member_timeout=3600000
cluster.jgroups.protocol.AUTH.value=

cluster.jgroups.protocol.UDP.mcast_addr=228.8.8.8
cluster.jgroups.protocol.UDP.mcast_port=45588
cluster.jgroups.protocol.UDP.ip_ttl=8

cluster.pipe.buffer.size=8192
# properties for data transfer via remote edges
# invariants: cluster.edge.chunkWaitTimeout < cluster.edge.readTimeout, cluster.edge.chunkWaitTimeout < cluster.edge.handshakeTimeout
cluster.edge.chunkSize=524288
cluster.edge.chunkWaitTimeout=60000
cluster.edge.connectTimeout=30000
cluster.edge.readTimeout=90000
cluster.edge.handshakeTimeout=120000
cluster.edge.chunkReadRetries=2
cluster.edge.disableChunkProtocol=false
cluster.ssl.disableCertificateValidation=false
# URL for synchronous inter-node communication 
cluster.http.url=

# interval for system status information retrieval
systeminfo.checkInterval=20000

groovy.api.enabled=false

#minimum size of heap memory (Xmx) in MB
server.env.min_heap_memory=900
#minimum size of non-heap memory (XX:MaxMetaspaceSize) in MB
server.env.min_nonheap_memory=256

installer.localSandboxes.subdirectories=data-in,data-out,data-tmp
installer.partitionedSandboxes.subdirectories=data-in,data-out,data-tmp

# pattern of files which can invoke event
pattern.sandbox.file.event=*.rjob

# how long are Data Service invocation records kept in DB (minutes)
dataservice.invocation.record.max.age=4320
# timeout for HTTP sessions created by data services' using HTTPS connector (in minutes, should be same as timeout in web.xml)
dataservice.https.connector.session.timeout=50

# minimum records for ratio evaluation
trigger.failure.ratio.min.record.count=3

# a boolean indicating if CORS filter is enabled
dataservice.cors.allowed=true
# a comma separated list of origin that are allowed to access the resources
dataservice.access.control.allow.origin=
# a comma separated list of methods allowed when accessing the resources
dataservice.access.control.allow.methods=
# a comma separated list of HTTP headers that allowed when accessing the resources
dataservice.access.control.allow.headers=
# a comma separated list of HTTP headers that are allowed to be exposed on the client
dataservice.access.control.expose.headers=
# a boolean indicating if the resource allows requests with credentials
dataservice.access.control.allow.credentials=false
# the number of seconds that preflight requests can be cached by the client
dataservice.access.control.max.age=

# timeout for HTTP request related to the Data App life-cycle such as login, logout, retrieval of the model in seconds
dataapp.request.timeout=30
# timeout for the execution of the Data App (call of the Data Service) in seconds
dataapp.execution.timeout=1800

# Data App limits for CSV response preview.
# The maximum size in MiB of the response part that will be used in the preview table.
dataapp.response.csv.maxPreviewSize = 100
# The limit is the overall number of cells in the preview table (number of rows x number of columns).
# If the size of the result exceeds the limit only truncated part is shown in the preview.
dataapp.response.csv.maxPreviewCells = 100000
# Maximum size of metadata in bytes
dataapp.response.csv.maxMetadataSize = 6144

http.api.enabled=false
#protection against CSRF
security.csrf.protection.enabled=true

jobqueue.enabled=true
jobqueue.dataservice.enabled=false
jobqueue.systemCpuLimit=0.85
jobqueue.coreHeapUsageLimit=0.9
jobqueue.workerHeapUsageLimit=0.9
jobqueue.minSystemCpu=0.2
# maximum number of enqueued jobs - limits maximum amount of memory used by job queue
jobqueue.maxQueueSize=100000
jobqueue.checkInterval=100
jobqueue.initialLoadStep=20
jobqueue.minLoadStep=5
jobqueue.maxLoadStep=300
jobqueue.loadStepMultiplier=0.1
jobqueue.loadStepDecreaseThreshold=10
jobqueue.loadStepIncreaseThreshold=30
jobqueue.cpuLoadDetectionToleranceDuration=60000

# OAuth2 configuration
oauth2.eager.refresh.seconds=60
oauth2.cluster.lock.attempts=10
oauth2.cluster.lock.backoff.min.ms=1000
oauth2.cluster.lock.backoff.max.ms=3000

# Worker management

# Time before worker's start is pronounced as unsuccessful (ms).
worker.startupTimeout=90000
# Delay after a failed worker start attempt, before another restart is attempted (ms).
worker.restartDelay=3000
# Timeouts for both server->worker and worker->server communication over HTTP (ms).
worker.connectTimeout=60000
worker.readTimeout=600000
# timeouts for worker->server communication when sending heartbeats
worker.heartbeat.connectTimeout=5000
worker.heartbeat.readTimeout=5000
# Number of workers to start (default is 1). 0 means do not start worker. Starting more than one worker is not supported now.
#worker.initialWorkers=0

# Port range for workers, when worker needs to open communication port, it takes it from here.
worker.portRange=10500-10600
# Remote Java debugging, JDWP port will be opened if set to true.
worker.enableDebug=false
# Initial and maximum heap size (MB). Set this to 0 for the JVM default.
worker.initHeapSize=0
worker.maxHeapSize=0
# Inherit system properties from the Server process.
worker.inheritSystemProperties=true
# path to additional jars to add to worker classpath, use semicolon to separate entries on Windows, semicolon or colon on Linux/Mac
worker.classpath=${clover.home}/worker-lib
# path to java executable for worker
#worker.javaExecutable=
# worker user-defined JVM arguments
#worker.jvmOptions=

# JDBC connection URL
#worker.jndi.datasource[0].url=
# maximum number of idle database connections in pool, set to -1 for no limit
#worker.jndi.datasource[0].maxIdle=
# maximum number of database connections in pool, set to -1 for no limit
#worker.jndi.datasource[0].maxActive=
# maximum time Worker waits for a database connection to become available, in ms, set to -1 for no limit
#worker.jndi.datasource[0].maxWait=
# user name for database connection
#worker.jndi.datasource[0].username=
# password for database connection
#worker.jndi.datasource[0].password=
# name of the database driver
#worker.jndi.datasource[0].driverClassName=
# name of the JNDI datasource
#worker.jndi.datasource[0].jndiName=

# enable or disable Worker SSL connection - true or false
#worker.ssl.enabled=
# path to the keyStore file
#worker.ssl.keyStore=
# keyStore password
#worker.ssl.keyStorePassword=
# alias of the key in keyStore
#worker.ssl.keyAlias=
# path to the trustStore file
#worker.ssl.trustStore=
# trustStore password
#worker.ssl.trustStorePassword=
# path to file with stored encrypted keystore and truststore passwords
#worker.ssl.passwordFile=

#pattern for log4j appender for messages from worker logged to server log
#logging.mem_appender.WORKER.pattern_layout=
#maximum number of messages from worker logged to server log that are held in memory
#logging.mem_appender.WORKER.size_limit=

# Worker health checking constants. Warning: these are for experts only and generally should not be modified.
#
# Time before Worker is pronounced unresponsive because of a missing heartbeat (ms).
#worker.health.heartbeatTimeout=120000
# Time before Worker is pronounced unresponsive because it is not sending any information to the Server (ms).
#worker.health.workerToCoreTimeout=60000
# Time before Worker is pronounced unresponsive because all requests are failing (throwing exceptions) (ms).
#worker.health.coreToWorkerTimeout=60000
# Number of requests in a row which must fail to pronounce Worker unresponsive (amount of failures).
#worker.health.coreToWorkerErrorThreshold=30

# path to branding resource file
webapps.branding.resourceFilePath=
# cache resources in memory of CloverDX server 
webapps.branding.useCache=true
# time (in seconds) to expire of resource cached in the client (browser) - maxAge of HTTP header Cache-Control
# default is 7 days
webapps.branding.clientCacheMaxAge=604800

# Enabled dblocker  
dblocker.enabled=true

# Approved database updates
autoapply.sys.db.patches=

# Operations Dashboard
# refreshing interval in ms
operations.dashboard.refreshing.interval=3000
# timeout for HTTP request related to the Operation Dashboard
operations.dashboard.request.timeout=30000

# Job Inspector
# refreshing interval in ms
job.inspector.refreshing.interval=5000
# timeout in ms for HTTP request related to the Job Inspectors
job.inspector.request.timeout=30000

# Wrangler
# Test mode need to be enabled only for wrangler automated tests otherwise it has to be disabled, the test mode enables additional internal steps in category TEST
wrangler.testMode=false
# In development mode, the generated clover graphs stay in workspace even after the job execution finishes.
wrangler.developmentMode=false
# Time (in seconds) before the Source data cache expires.
wrangler.sourceCache.maxAge=3600

# Data Manager properties (except db connection)
# Code of sandbox which holds lookup definition for "Lists" feature
datamanager.lookup.home=DataManagerReferenceData
