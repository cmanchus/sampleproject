<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions 
		xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
		xmlns:tns="http://server.cloveretl.com/CloverServerWS/"
		xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
		xmlns:xsd="http://www.w3.org/2001/XMLSchema"
		name="CloverServerWS" 
		targetNamespace="http://server.cloveretl.com/CloverServerWS/">
  <wsdl:types>
    <xsd:schema 
    		targetNamespace="http://server.cloveretl.com/CloverServerWS/" 
    		xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
            xmlns:debug="http://server.cloveretl.com/DebugModel">
    
      <xsd:import namespace="http://server.cloveretl.com/DebugModel" schemaLocation="DebugModel.xsd" />
    
      <xsd:element name="Login">
        <xsd:complexType>
          <xsd:sequence>
          	<xsd:element name="username" type="xsd:string" />
          	<xsd:element name="password" type="xsd:string"></xsd:element>
          	<xsd:element name="locale" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="LoginResponse">


      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="session" type="tns:Session"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>

      <xsd:complexType name="Session">
      	<xsd:attribute name="sessionToken" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="userName" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="message" type="xsd:string"></xsd:attribute>
      </xsd:complexType>
      <xsd:element name="GetSandboxes">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>

      <xsd:element name="GetLibraries">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetSandboxesAndLibraries">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetSandboxesResponse">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sandboxes" type="tns:SandboxInfo" maxOccurs="unbounded"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      
      <xsd:element name="GetSandboxesAndLibrariesResponse">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sandboxes" type="tns:SandboxInfo" maxOccurs="unbounded"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>

      <xsd:complexType name="SandboxInfo">
        <xsd:sequence>
            <xsd:element name="locations" type="tns:SandboxLocationInfo" maxOccurs="unbounded"></xsd:element>
        </xsd:sequence>
        <xsd:attribute name="code" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="rootPath" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="ownerUserName" type="xsd:string"></xsd:attribute>

        <xsd:attribute name="readPermission" type="xsd:boolean"></xsd:attribute>
        <xsd:attribute name="writePermission" type="xsd:boolean"></xsd:attribute>
        <xsd:attribute name="executePermission" type="xsd:boolean"></xsd:attribute>
        <xsd:attribute name="distributionType" type="tns:SandboxDistributionType" />
      </xsd:complexType>
      
      <xsd:simpleType name="SandboxDistributionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="shared" />
            <xsd:enumeration value="local" />
            <xsd:enumeration value="partitioned" />
            <xsd:enumeration value="library" />
            <xsd:enumeration value="workspace" />
        </xsd:restriction>
      </xsd:simpleType>
      
      <xsd:complexType name="SandboxLocationInfo">
        <xsd:attribute name="code" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="sandboxCode" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="rootPath" type="xsd:string"></xsd:attribute>
        <xsd:attribute name="nodeId" type="xsd:string"></xsd:attribute>
      </xsd:complexType>
      
      <xsd:element name="GetSandbox">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSandboxResponse">
      	<xsd:complexType>
      		<xsd:sequence>

      			<xsd:element name="sandbox" type="tns:SandboxInfo"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="GetUser">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      			<xsd:element name="userName" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="GetUserResponse">

      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="user" type="tns:UserInfo"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>

      <xsd:complexType name="UserInfo">
      	<xsd:attribute name="domain" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="userName" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="firstName" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="lastName" type="xsd:string"></xsd:attribute>
      	<xsd:attribute name="email" type="xsd:string"></xsd:attribute>
      </xsd:complexType>
      <xsd:element name="DownloadFileContent">
      	<xsd:complexType>
      		<xsd:sequence>

      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
      			<xsd:element name="filePath" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="DownloadFileContentResponse">
      	<xsd:complexType>
      		<xsd:sequence>

      			<xsd:element name="fileContent" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="Logout">
      	<xsd:complexType>
      		<xsd:sequence>

      			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
            <xsd:element name="ListFiles">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="folderPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ListFilesResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="files" type="tns:FileInfo" maxOccurs="unbounded"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:complexType name="FileInfo">
            	<xsd:attribute name="path" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="type" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="permissions" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="isFolder" type="xsd:boolean"></xsd:attribute>
            	<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="size" type="xsd:long"></xsd:attribute>
            	<xsd:attribute name="lastModified" type="xsd:long"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="UploadFileContent">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="filePath"
            				type="xsd:string">
            			</xsd:element>
                        <xsd:element name="append" type="xsd:boolean" minOccurs="0" /> 
                        <xsd:element name="lastModified" type="xsd:long" minOccurs="0" /> 
            			<xsd:element name="content" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="UploadFileContentResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CopySandboxFile">
            	<xsd:complexType>
            		<xsd:sequence>

                        <xsd:element name="sessionToken" type="xsd:string">
            			</xsd:element>
                        <xsd:element name="sourceSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourceFilePath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetFilePath"
            				type="xsd:string">
            			</xsd:element>

            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CopyFile">
            	<xsd:complexType>
            		<xsd:sequence>

                        <xsd:element name="sessionToken" type="xsd:string">
            			</xsd:element>
                        <xsd:element name="sourceSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourceFilePath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetFilePath"
            				type="xsd:string">
            			</xsd:element>

            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandboxFile">
            	<xsd:complexType>
            		<xsd:sequence>

                        <xsd:element name="sessionToken" type="xsd:string">
            			</xsd:element>
                        <xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="filePath"
            				type="xsd:string">
            			</xsd:element>

            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFile">
            	<xsd:complexType>
            		<xsd:sequence>

                        <xsd:element name="sessionToken" type="xsd:string">
            			</xsd:element>
                        <xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="filePath"
            				type="xsd:string">
            			</xsd:element>

            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFolder">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="folderPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="filePath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="lastModified"
            				type="xsd:long" minOccurs="0">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveSandboxFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourceSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourcePath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourceSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourcePath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetSandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameSandboxFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="path" type="xsd:string">
            			</xsd:element>
            			<xsd:element name="newName"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="path" type="xsd:string">
            			</xsd:element>
            			<xsd:element name="newName"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="LogoutResponse">
            	<xsd:complexType>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DownloadFileContent_fault">
            	<xsd:complexType>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ListFiles_fault">
            	<xsd:complexType>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetFile">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="path"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="file" type="tns:FileInfo"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetFile_fault">
            	<xsd:complexType>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="UploadFileContent_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="UploadFileContent_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>

            <xsd:element name="DeleteDirectory">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="directoryPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteDirectoryResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteDirectory_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="DeleteDirectory_fault"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="NewElement"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ExecuteGraph">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="graphPath"
            				type="xsd:string">
            			</xsd:element>

            			<xsd:element name="debugEnabled"
            				type="xsd:boolean">
            			</xsd:element>

            			<xsd:element name="graphProperties"
            				minOccurs="0" type="tns:WSProperties">
            			</xsd:element>
            			<xsd:element name="runtimeContext"
            				type="tns:WSProperties" minOccurs="0">
                            <xsd:annotation>
                            	<xsd:documentation>'runtimeContext' attribute can be used to pass runtime settings (analogy for GraphRuntimeContext configuration object).

Accepted values:
skipCheckConfig - enforce skipping of graph configuration check (see GraphRuntimeContext.PropertyKey)
</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
                        
                        <xsd:element name="DebugOptions" minOccurs="0">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="breakpoint" type="debug:Breakpoint" minOccurs="0" maxOccurs="unbounded" />
                                    <xsd:element name="breakingEnabled" type="xsd:boolean" />
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                        
                        <xsd:element name="HttpRequestMockup" minOccurs="0">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="method" type="xsd:string" minOccurs="0" />
                                    <xsd:element name="uri" type="xsd:string" minOccurs="0" />
                                    <xsd:element name="parameters" type="tns:WSProperties" minOccurs="0" />
                                    <xsd:element name="headers" type="tns:WSProperties" minOccurs="0" />
                                    <xsd:element name="body" type="xsd:base64Binary" minOccurs="0" />
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="DeleteFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFolderResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:boolean"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandboxFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="tns:FileInfo"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:boolean"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandboxFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="CreateSandboxFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="CreateFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateFolder_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="CreateFolder_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:simpleType name="long">
            	<xsd:restriction base="xsd:string"></xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="CopySandboxFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="CopySandboxFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CopyFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="CopyFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveSandboxFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="MoveSandboxFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="MoveFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameSandboxFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="RenameSandboxFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameFile_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="RenameFile_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CopySandboxFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="tns:FileInfo"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="CopyFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveSandboxFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="tns:FileInfo" maxOccurs="unbounded" ></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="MoveFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameSandboxFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="tns:FileInfo" maxOccurs="unbounded" ></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RenameFileResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string" ></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="Logout_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="Logout_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ExecuteGraphResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:long"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ExecuteGraph_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="ExecuteGraph_fault"
            				type="xsd:string">
            			</xsd:element>
                        <xsd:element name="blockingRunId" type="xsd:long" minOccurs="0" />
                        <xsd:element name="executePermissionNotSet" type="xsd:boolean" minOccurs="0" />
                        <xsd:element name="allNodesSuspended" type="xsd:boolean" minOccurs="0" />
                        <xsd:element name="failedRunId" type="xsd:long" minOccurs="0" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphExecutionLog">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID" type="xsd:long">
            			</xsd:element>
            			<xsd:element name="offset"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphExecutionLogResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphExecutionLog_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="GetGraphExecutionLog_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="SetLastModified">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="path" type="xsd:string">
            			</xsd:element>
            			<xsd:element name="lastModified"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="SetLastModifiedResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="SetLastModified_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="SetLastModified_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphTracking">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphTrackingResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="tns:GraphTrackingHierarchy"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphTracking_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="GetGraphTracking_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
        
            <xsd:complexType name="GraphTracking">
            	<xsd:sequence maxOccurs="unbounded" minOccurs="0">
            		<xsd:element name="phaseTracking"
            			type="tns:PhaseTracking">
            		</xsd:element>

            	</xsd:sequence>

            	<xsd:attribute name="execTime" type="xsd:long"></xsd:attribute>
            	<xsd:attribute name="finalStatus" type="xsd:string"></xsd:attribute>

            	<xsd:attribute name="startTime" type="xsd:date"></xsd:attribute>
            	<xsd:attribute name="stopTime" type="xsd:date"></xsd:attribute>
            	<xsd:attribute name="nodeId" type="xsd:string">
            		<xsd:annotation>
            			<xsd:documentation>
            				Identifier of cluster node id where the
            				graph was executed.
            			</xsd:documentation>
            		</xsd:annotation>
            	</xsd:attribute>
            	<xsd:attribute name="runId" type="xsd:long"></xsd:attribute>
            </xsd:complexType>

            <xsd:complexType name="PhaseTracking">
            	<xsd:sequence maxOccurs="unbounded" minOccurs="0">
            		<xsd:element name="nodeTracking"
            			type="tns:NodeTracking">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="phaseNumber" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="execTime" type="xsd:long"></xsd:attribute>
            </xsd:complexType>


        
            <xsd:complexType name="NodeTracking">
            	<xsd:sequence maxOccurs="unbounded" minOccurs="0">
            		<xsd:element name="portTracking"
            			type="tns:PortTracking">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="nodeId" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="nodeName" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="nodeType" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="totalCpuTime" type="xsd:long"></xsd:attribute>
            	<xsd:attribute name="totalUserTime" type="xsd:long"></xsd:attribute>
            	<xsd:attribute name="result" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="cpuUsage" type="xsd:float"></xsd:attribute>
            	<xsd:attribute name="peakCpuUsage" type="xsd:float"></xsd:attribute>
            	<xsd:attribute name="userUsage" type="xsd:float"></xsd:attribute>
            	<xsd:attribute name="peakUserUsage" type="xsd:float"></xsd:attribute>
            	<xsd:attribute name="lifetimeMemoryAllocation" type="xsd:long"></xsd:attribute>
            </xsd:complexType>

            <xsd:complexType name="PortTracking">
            	<xsd:attribute name="portType" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="index" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="byteFlow" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="recordFlow" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="bytePeak" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="recordPeak" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="totalBytes" type="xsd:long"></xsd:attribute>
            	<xsd:attribute name="totalRecords" type="xsd:int"></xsd:attribute>
            	<xsd:attribute name="remoteRunId" type="xsd:long"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="GetGraphExecutionStatus">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID" type="xsd:long">
            			</xsd:element>
            			<xsd:element name="waitForStatus"
            				type="xsd:string">
                            <xsd:annotation>
                            	<xsd:documentation>status text code (FINISHED_OK | ERROR | ABORTED) which we want to wait for. If it's specified, this operation will wait until graph is in required status or one of the final status.
</xsd:documentation></xsd:annotation>
            			</xsd:element>
            			<xsd:element name="waitTimeout"
            				type="xsd:long">
                            <xsd:annotation>
                            	<xsd:documentation>If waitForStatus is specified, it will wait only specified amount of milliseconds. Default 0 means forever, but it depends on application server configuration. After timeout returns error response.
</xsd:documentation></xsd:annotation>
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetJobExecutionStatus">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID" type="xsd:long">
            			</xsd:element>
            			<xsd:element name="waitForStatus"
            				type="xsd:string">
                            <xsd:annotation>
                            	<xsd:documentation>status text code (FINISHED_OK | ERROR | ABORTED) which we want to wait for. If it's specified, this operation will wait until graph is in required status or one of the final status.
</xsd:documentation></xsd:annotation>
            			</xsd:element>
            			<xsd:element name="waitForRelease" type="xsd:boolean" minOccurs="0">
            				<xsd:annotation>
            					<xsd:documentation>
            					If waitForStatus is specified and it is a stop status, also wait for job release completion. This is useful to ensure
            					that the job log is printed completely after the call finishes.
            					</xsd:documentation>
            				</xsd:annotation>
            			</xsd:element>
            			<xsd:element name="waitTimeout"
            				type="xsd:long">
                            <xsd:annotation>
                            	<xsd:documentation>If waitForStatus is specified, it will wait only specified amount of milliseconds. Default 0 means forever, but it depends on application server configuration. After timeout returns error response.
</xsd:documentation></xsd:annotation>
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
            <xsd:simpleType name="JobStatus">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="N_A" />
                    <xsd:enumeration value="READY" />
                    <xsd:enumeration value="RUNNING" />
                    <xsd:enumeration value="WAITING" />
                    <xsd:enumeration value="FINISHED_OK" />
                    <xsd:enumeration value="ERROR" />
                    <xsd:enumeration value="ABORTED" />
                    <xsd:enumeration value="TIMEOUT" />
                    <xsd:enumeration value="UNKNOWN" />
                </xsd:restriction>
            </xsd:simpleType>
            
            <xsd:element name="GetGraphExecutionStatusResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="tns:ExecutionStatus"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetGraphExecutionStatus_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element
            				name="GetGraphExecutionStatus_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:element name="KillGraph">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillGraphResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillGraph_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="KillGraph_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetCheckConfigResult">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="graphPath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="graphFileContent"
            				type="xsd:string" minOccurs="0">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetCheckConfigResultResponse">
            	<xsd:complexType>
            		<xsd:sequence maxOccurs="unbounded" minOccurs="0">

            			<xsd:element name="out" type="tns:ConfigurationProblem"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetCheckConfigResult_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="GetCheckConfigResult_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
    		<xsd:element name="StartCheckConfigOperation">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string" />
            			<xsd:element name="sandboxCode"
            				type="xsd:string" />
            			<xsd:element name="graphPath"
            				type="xsd:string" />
            			<xsd:element name="graphFileContent"
            				type="xsd:string" minOccurs="0" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
    		<xsd:element name="StartCheckConfigOperationResponse">
            	<xsd:complexType>
                	<xsd:sequence>
                    	<xsd:element name="out" type="xsd:long" />
                	</xsd:sequence>
            	</xsd:complexType>
        	</xsd:element>
        	
        	<xsd:element name="StartCheckConfigOperation_fault">
            	<xsd:complexType>
            		<xsd:sequence>
	           			<xsd:element name="StartCheckConfigOperation_fault"
            				type="xsd:string" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
        	
        	<xsd:element name="GetCheckConfigOperationResult">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string" />
            			<xsd:element name="handle"
            				type="xsd:long" />
            			<xsd:element name="timeout"
							type="xsd:long" minOccurs="0" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
            <xsd:complexType name="CheckConfigOperationResult">
            	<xsd:sequence>
					<xsd:element name="timeoutExpired"
						type="xsd:boolean">
            			<xsd:annotation>
            				<xsd:documentation>
            					Indicates that the request timed out.
            				</xsd:documentation>
            			</xsd:annotation>
					</xsd:element>
					<xsd:element name="aborted"
						type="xsd:boolean">
            			<xsd:annotation>
            				<xsd:documentation>
            					Indicates that the operation was aborted.
            				</xsd:documentation>
            			</xsd:annotation>
					</xsd:element>
            		<xsd:sequence maxOccurs="unbounded" minOccurs="0">
            			<xsd:element name="problems" type="tns:ConfigurationProblem" />
            		</xsd:sequence>
				</xsd:sequence>
			</xsd:complexType>

            <xsd:element name="GetCheckConfigOperationResultResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="tns:CheckConfigOperationResult" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
            <xsd:element name="GetCheckConfigOperationResult_fault" /> <!-- empty, the message is in the exception -->
            
            <xsd:element name="AbortCheckConfigOperation">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string" />
            			<xsd:element name="handle"
            				type="xsd:long" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
    		 <xsd:element name="AbortCheckConfigOperationResponse">
                <xsd:complexType />
            </xsd:element>
            
            <xsd:element name="AbortCheckConfigOperation_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="AbortCheckConfigOperation_fault"
            				type="xsd:string" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:complexType name="ConfigurationProblem">
            	<xsd:sequence>
            		<xsd:element name="message" type="xsd:string"></xsd:element>
            	</xsd:sequence>            	<xsd:attribute name="elementID" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="attributeName" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="severity" type="xsd:string"></xsd:attribute>
            	<xsd:attribute name="priority" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="GetEdgeDebugData">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="graphPath"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="writerRunId"
            				type="xsd:long">
            			</xsd:element>
            			<xsd:element name="readerRunId"
            				type="xsd:long">
            			</xsd:element>
            			<xsd:element name="edgeID" type="xsd:string">
            			</xsd:element>
            			<xsd:element name="startRecord"
            				type="xsd:int">
            			</xsd:element>
            			<xsd:element name="recordCount"
            				type="xsd:int">
            			</xsd:element>
            			<xsd:element name="filterExpression"
            				type="xsd:string">
            			</xsd:element>
                        <xsd:element name="fieldSelection" minOccurs="0" maxOccurs="unbounded" type="xsd:string" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetEdgeDebugDataResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetEdgeDebugData_fault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="GetEdgeDebugData_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>			<xsd:element name="GetViewData_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="GetViewData_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>

	<xsd:element name="StartValidateConnectionOperation">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
				<xsd:element name="sandboxCode" type="xsd:string" />
				<xsd:element name="graphPath" type="xsd:string" />
				<xsd:element name="properties" type="tns:WSProperties" minOccurs="0" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="StartValidateConnectionOperationResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="out" type="xsd:long" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="StartValidateConnectionOperation_fault">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="StartValidateConnectionOperation_fault" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GetValidateConnectionOperationResult">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
				<xsd:element name="handle" type="xsd:long" />
				<xsd:element name="timeout" type="xsd:long" minOccurs="0" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GetValidateConnectionOperationResultResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="out" type="tns:ValidateConnectionOperationResult" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GetValidateConnectionOperationResult_fault" /> <!-- empty, the message is in the exception -->

	<xsd:simpleType name="ValidateConnectionOperationStatus">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="VALID" />
			<xsd:enumeration value="ERROR" />
			<xsd:enumeration value="TIMEOUT" />
			<xsd:enumeration value="ABORTED" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="ValidateConnectionOperationResult">
		<xsd:sequence>
			<xsd:element name="status" type="tns:ValidateConnectionOperationStatus" />
			<xsd:element name="errorMessage" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="AbortValidateConnectionOperation">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
				<xsd:element name="handle" type="xsd:long" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="AbortValidateConnectionOperationResponse">
		<xsd:complexType />
	</xsd:element>

	<xsd:element name="AbortValidateConnectionOperation_fault">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="AbortValidateConnectionOperation_fault" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GenerateOAuth2AuthorizationUrl">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
				<xsd:element name="configSandboxUrl" type="xsd:string" />
				<xsd:element name="properties" type="tns:WSProperties" minOccurs="0" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GenerateOAuth2AuthorizationUrlResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="url" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GenerateOAuth2AuthorizationUrlResponse_fault" /> <!-- empty, the message is in the exception -->

	<xsd:element name="IsOAuth2ConnectionAuthorized">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
				<xsd:element name="configSandboxUrl" type="xsd:string" />
				<xsd:element name="properties" type="tns:WSProperties" minOccurs="0" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="IsOAuth2ConnectionAuthorizedResult">
		<xsd:sequence>
			<xsd:element name="authorized" type="xsd:boolean" />
			<xsd:element name="refreshAvailable" type="xsd:boolean" />
			<xsd:element name="expires" type="xsd:long" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="IsOAuth2ConnectionAuthorizedResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="out" type="tns:IsOAuth2ConnectionAuthorizedResult" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="IsOAuth2ConnectionAuthorizedResponse_fault" /> <!-- empty, the message is in the exception -->

	<xsd:element name="GenerateOAuth2DefaultRedirectUrl">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="sessionToken" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GenerateOAuth2DefaultRedirectUrlResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="url" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="GenerateOAuth2DefaultRedirectUrlResponse_fault" /> <!-- empty, the message is in the exception -->

    <xsd:element name="PrepareDataView">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="sessionToken" type="xsd:string" />
                <xsd:element name="sandboxCode" type="xsd:string" />
                <xsd:element name="jobPath" type="xsd:string" />
                <xsd:element name="componentId" type="xsd:string" />
                <xsd:element name="metadataXml" type="xsd:string" minOccurs="0" />
                <xsd:element name="startRecord" type="xsd:int" />
                <xsd:element name="filterExpression" type="xsd:string" />
                <xsd:element name="jobXml" type="xsd:string" minOccurs="0" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="PrepareDataViewResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="out" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="FetchDataView">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="sessionToken" type="xsd:string" />
                <xsd:element name="handle" type="xsd:string" />
                <xsd:element name="recordCount" type="xsd:int" />
                <xsd:element name="timeout" type="xsd:long" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="FetchDataViewResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="out" type="tns:FetchedData" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:complexType name="FetchedData">
        <xsd:sequence>
            <xsd:element name="recordCount" type="xsd:int" />
            <xsd:element name="noMoreData" type="xsd:boolean" />
            <xsd:element name="records" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="DisposeDataView">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="sessionToken" type="xsd:string" />
                <xsd:element name="handle" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="DisposeDataViewResponse">
        <xsd:complexType>
            <xsd:sequence />
        </xsd:complexType>
    </xsd:element>
    
      <xsd:complexType name="WSProperties">
      	<xsd:sequence>
      		<xsd:element name="properties" type="tns:WSProperty" minOccurs="0" maxOccurs="unbounded"></xsd:element>
      	</xsd:sequence>
      </xsd:complexType>

            <xsd:complexType name="WSProperty">
            	<xsd:attribute name="key" type="xsd:string" use="required"></xsd:attribute>
            	<xsd:attribute name="value" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
    
            <xsd:complexType name="ExecutionStatus">
            	<xsd:sequence>
            		<xsd:element name="runId" type="xsd:long">
            			<xsd:annotation>
            				<xsd:documentation>
            					Identifier of the graph run.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="graphId" type="xsd:string">
            			<xsd:annotation>
            				<xsd:documentation>
            					Identifier of graph.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="revision" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Revision of the job file.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="executionLabel" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Execution label of the run.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="sandboxId" type="xsd:string">
            			<xsd:annotation>
            				<xsd:documentation>
            					Sandbox identifier, where the graph was
            					executed.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="nodeId" type="xsd:string">
            			<xsd:annotation>
            				<xsd:documentation>
            					Identifier of cluster node, where the
            					graph is executed.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="jobType" type="tns:JobType">
            			<xsd:annotation>
            				<xsd:documentation>
            					Type of job - possible values:
            					ETL_GRAPH, JOBFLOW, SUBGRAPH, RESTJOB, WRANGLER_JOB
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="executionType"
            			type="tns:ExecutionType">
            			<xsd:annotation>
            				<xsd:documentation>
            					Type of job execution - possible values:
            					STANDALONE, MASTER, PARTITION_WORKER,
            					SUB_JOB
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="status" type="xsd:string">
            			<xsd:annotation>
            				<xsd:documentation>
            					Graph execution status, one of the
            					following values RUNNING WAITING
            					FINISHED_OK ERROR ABORTED
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="submitTime" type="xsd:dateTime"></xsd:element>
            		<xsd:element name="startTime" type="xsd:dateTime">
            			<xsd:annotation>
            				<xsd:documentation>
            					Graph execution start.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="stopTime" type="xsd:dateTime"
            			maxOccurs="1" minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. Graph execution end.
            					Only for finished graph runs.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="errStackTrace" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. In case the graph
            					finished with error, exection stack
            					trace is present.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="errMessage" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. In case the graph
            					finished with error, exection message is
            					present.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="errNodeId" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. In case the graph
            					finished with error, caused component id
            					is present.

            					NOTE: should be renamed to
            					errComponentId
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>

            		<xsd:element name="errNodeType" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. In case the graph
            					finished with error, caused component
            					type is present.

            					NOTE: should be renamed to
            					errComponentType
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>

            		<xsd:element name="rootRunId" type="xsd:long"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element. Contains run ID of the
            					root job of this execution.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="clusterRun" type="xsd:boolean"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element - tells whether the
            					execution was performed on a cluster
            					node or a standalone server.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            		<xsd:element name="workerId" type="xsd:string"
            			minOccurs="0">
            			<xsd:annotation>
            				<xsd:documentation>
            					Optional element - contains ID of worker
            					in clustered run.
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
                        <xsd:simpleType name="JobType">            	<xsd:restriction base="xsd:string">            		<xsd:enumeration value="ETL_GRAPH" />            		<xsd:enumeration value="JOBFLOW" />            		<xsd:enumeration value="SUBGRAPH"></xsd:enumeration>            		<xsd:enumeration value="SUBJOBFLOW"></xsd:enumeration>
            		<xsd:enumeration value="RESTJOB"></xsd:enumeration>
            		<xsd:enumeration value="WRANGLER_JOB"></xsd:enumeration>
            	</xsd:restriction>
            </xsd:simpleType>

            <xsd:simpleType name="ExecutionType">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="STANDALONE" />
                    <xsd:enumeration value="MASTER" />
                    <xsd:enumeration value="PARTITION_WORKER" />
                    <xsd:enumeration value="UNKNOWN" />                </xsd:restriction>
            </xsd:simpleType>
            
            <xsd:element name="echo">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="in" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="echoResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="echoFault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="echoFault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJob">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJobResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJobFault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="KillJobFault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJobs">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="filter"
            				minOccurs="0" type="tns:KillJobFilter">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJobsResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="xsd:int"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="KillJobsFault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="KillJobsFault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:complexType name="KillJobFilter">
            	<xsd:sequence>
            		<xsd:element name="sandboxCode" type="xsd:string" minOccurs="0" />
                    <xsd:element name="jobFile" type="xsd:string" minOccurs="0" />
                    <xsd:element name="executionGroup" type="xsd:string" minOccurs="0" />
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="GetEdgeDebugInfoList">
                <xsd:complexType>
                    <xsd:sequence>

                    	<xsd:element name="sessionToken"
                    		type="xsd:string">
                    	</xsd:element>
                        <xsd:element name="sandboxCode" type="xsd:string">
                    	</xsd:element>
                        <xsd:element name="graphPath" type="xsd:string">
                    	</xsd:element>
                        <xsd:element name="runId" type="xsd:long"></xsd:element>

                    	<xsd:element name="edgeId" type="xsd:string">
                    	</xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="GetEdgeDebugInfoListResponse">
                <xsd:complexType>
                    <xsd:sequence>

                        <xsd:element name="items"
                            type="tns:EdgeDebugInfo" maxOccurs="unbounded" minOccurs="0">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        
            <xsd:complexType name="EdgeDebugInfo">
                <xsd:sequence>
                	<xsd:element name="writerRunId" type="xsd:long"></xsd:element>
                	<xsd:element name="writerNodeId"
                		type="xsd:string">
                	</xsd:element>

                	<xsd:element name="readerRunId" type="xsd:long"></xsd:element>
                    <xsd:element name="readerNodeId" type="xsd:string"></xsd:element>
                    <xsd:element name="edgeId" type="xsd:string"></xsd:element>
                	<xsd:element name="available" type="xsd:boolean"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="GetEdgeDebugInfoListFault">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="GetEdgeDebugDataListFault"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandbox">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken" type="xsd:string" />
                        <xsd:element name="code" type="xsd:string" />
                        <xsd:element name="name" type="xsd:string" />
                        <xsd:element name="type" type="tns:SandboxDistributionType" />
                        <xsd:element name="createPath" type="xsd:boolean" />
                        <xsd:element name="location" type="tns:SandboxLocationInfo"
                            minOccurs="0" maxOccurs="unbounded" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandboxResponse">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="out" type="tns:SandboxInfo"></xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="CreateSandboxFault">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="CreateSandboxFault"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            
            <xsd:element name="DeleteSandbox">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken" type="xsd:string" />
                        <xsd:element name="code" type="xsd:string" />
                        <xsd:element name="deleteSandboxDir" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="false"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="DeleteSandboxResponse">
                <xsd:complexType />
            </xsd:element>
            <xsd:element name="DeleteSandboxFault">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="DeleteSandboxFault"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            
            <xsd:element name="IsCluster">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="IsClusterResponse">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="out" type="xsd:boolean" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            
            <xsd:element name="IsPartitioning">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="IsPartitioningResponse">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="out" type="xsd:boolean" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            
            <xsd:element name="GetTimeZone">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken"
                            type="xsd:string">
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="GetTimeZoneResponse">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="out" type="xsd:string" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="GetClusterNodesInfo">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken" type="xsd:string" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:simpleType name="ClusterNodeStatus">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="STARTING" />
                    <xsd:enumeration value="READY" />
                    <xsd:enumeration value="STOPPED" />
                    <xsd:enumeration value="FORCED_STOP" />
                    <xsd:enumeration value="UNKNOWN" />
                    <xsd:enumeration value="FORCED_SUSPEND" />
                    <xsd:enumeration value="FORCED_RESUME" />
                    <xsd:enumeration value="SUSPENDED" />
                    <xsd:enumeration value="INVALID" />
                    <xsd:enumeration value="NO_AVAILABLE_WORKER" />
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="ClusterNodeInfo">
                <xsd:sequence>
                    <xsd:element name="nodeId" type="xsd:string" />
                    <xsd:element name="nodeUrl" type="xsd:string" />
                    <xsd:element name="status" type="tns:ClusterNodeStatus" />
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="GetClusterNodesInfoResponse">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="out" type="tns:ClusterNodeInfo"
                            minOccurs="0" maxOccurs="unbounded" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="GetChildJobs">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="runID"
            				type="xsd:long">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="GetChildJobsResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="runIDs" type="xsd:long" maxOccurs="unbounded" minOccurs="0"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
            <xsd:element name="AnalyseGraph">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sandboxCode"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="graphPath"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="AnalyseGraphResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="transformationPlan" type="tns:TransformationPlan"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:complexType name="TransformationPlan">
            	<xsd:sequence>
            		<xsd:element name="distributed"
            			type="xsd:boolean">
            		</xsd:element>
            		<xsd:element name="workerPlans" type="tns:WorkerPlan" maxOccurs="unbounded" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="WorkerPlan">
            	<xsd:sequence>
            		<xsd:element name="workerId" type="tns:WorkerId"></xsd:element>
            		<xsd:element name="components" type="xsd:string" maxOccurs="unbounded" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="WorkerId">
            	<xsd:sequence>
            		<xsd:element name="nodeId" type="xsd:string"></xsd:element>
            		<xsd:element name="number" type="xsd:int"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="EncryptText">
            	<xsd:complexType>
            		<xsd:sequence>
						<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
            			<xsd:element name="text" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="EncryptTextResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="encryptedText" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="IsSecureParamPasswdAvailable">
            	<xsd:complexType>
            		<xsd:sequence>
						<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="IsSecureParamPasswdAvailableResponse">
            	<xsd:complexType>
            		<xsd:sequence>
	           			<xsd:element name="isAvailable" type="xsd:boolean"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
            <xsd:element name="UpdateSecureParamPasswd">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="sessionToken" type="xsd:string" />
                        <xsd:element name="pwd" type="xsd:string" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="UpdateSecureParamPasswdResponse">
                <xsd:complexType />
            </xsd:element>
            <xsd:element name="UpdateSecureParamPasswdFault">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="UpdateSecureParamPasswdFault" type="xsd:string" />
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            
            <xsd:complexType name="ConfigurationExportOptions">
                <xsd:choice>
                    <xsd:sequence>
                        <xsd:element name="exportAll" type="xsd:boolean" />
                    </xsd:sequence>
                    <xsd:sequence>
                        <xsd:element name="exportUsers" type="xsd:boolean" />
                        <xsd:element name="exportUserGroups" type="xsd:boolean" />
                        <xsd:element name="exportSandboxes" type="xsd:boolean" />
                        <xsd:element name="exportLibraryRepositories" type="xsd:boolean" />
                        <xsd:element name="exportLibraries" type="xsd:boolean" />
                        <xsd:element name="exportJobConfigs" type="xsd:boolean" />
                        <xsd:element name="exportSchedules" type="xsd:boolean" />
                        <xsd:element name="exportEventListeners" type="xsd:boolean" />
                        <xsd:element name="exportDataServices" type="xsd:boolean" />
                        <xsd:element name="exportTempSpaces" type="xsd:boolean" />
                        <xsd:element name="exportSecretManagers" type="xsd:boolean" />
                        <xsd:element name="exportOperationsDashboards" type="xsd:boolean" />
                    </xsd:sequence>
                </xsd:choice>
            </xsd:complexType>
            <xsd:element name="ExportServerConfiguration">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken" type="xsd:string" />
                        <xsd:element name="options" type="tns:ConfigurationExportOptions" minOccurs="0" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ExportServerConfigurationResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ExportServerConfigurationFault">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element
            				name="ExportServerConfigurationFault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:complexType name="ImportServerConfigurationOptions">
            	<xsd:sequence>
            		<xsd:element name="dryRun" type="xsd:boolean" />
                    <xsd:element name="importNewOnly" type="xsd:boolean" />
                    <xsd:element name="importAll" type="xsd:boolean" />
                    <xsd:element name="importUsers" type="xsd:boolean" />
                    <xsd:element name="importUserGroups" type="xsd:boolean" />
                    <xsd:element name="importSandboxes" type="xsd:boolean" />
                    <xsd:element name="importLibraryRepositories" type="xsd:boolean" />
                    <xsd:element name="importLibraries" type="xsd:boolean" />
                    <xsd:element name="importJobConfigs" type="xsd:boolean" />
                    <xsd:element name="importSchedules" type="xsd:boolean" />
                    <xsd:element name="importEventListeners" type="xsd:boolean" />
                    <xsd:element name="importSecretManagers" type="xsd:boolean" />
                    <xsd:element name="importDataServices" type="xsd:boolean" />
                    <xsd:element name="importTempSpaces" type="xsd:boolean" />
                    <xsd:element name="importOperationsDashboards" type="xsd:boolean" />
                    <xsd:element name="override" type="xsd:boolean" />
            	</xsd:sequence>
            </xsd:complexType>
            
             <xsd:simpleType name="ImportServerConfigurationStatus">
		        <xsd:restriction base="xsd:string">
		          <xsd:enumeration value="SUCCESS" />
		          <xsd:enumeration value="FAILURE" />
		        </xsd:restriction>
		      </xsd:simpleType>
                        
            <xsd:element name="ImportServerConfiguration">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>                        <xsd:element name="options"
            				type="tns:ImportServerConfigurationOptions">
            			</xsd:element>
            			<xsd:element name="content" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ImportServerConfigurationResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="out" type="tns:ImportServerConfigurationResult" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="ImportServerConfigurationFault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element
            				name="ImportServerConfigurationFault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:complexType name="ImportServerConfigurationResult">
                <xsd:sequence>
                    <xsd:element name="report" type="xsd:anyType" minOccurs="0" />
                </xsd:sequence>
		      	<xsd:attribute name="status" type="tns:ImportServerConfigurationStatus" />
	      	</xsd:complexType>
            <xsd:element name="DecryptText">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="sessionToken"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="encryptedText" minOccurs="0" maxOccurs="unbounded"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="DecryptTextResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="decryptedText" type="xsd:string"
            				minOccurs="0" maxOccurs="unbounded" />
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            
        <xsd:element name="GetCloverVersion">
            <xsd:complexType>
                <xsd:sequence />
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="GetCloverVersionResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>

        <xsd:element name="GetDataSetMetadata">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="dataSetCode"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="forWriting"
        				type="xsd:boolean">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetDataSetMetadataResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="metadata" type="xsd:string">
        				<xsd:annotation>
        					<xsd:documentation>Metadata in regular XML form known for example from grf files.</xsd:documentation>
        				</xsd:annotation></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetDataSetMetadataFault">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="GetDataSetMetadataFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:element name="GetEdgeDebugMetadata">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="edgeDebugInfo" type="tns:EdgeDebugInfo"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetEdgeDebugMetadataResponse">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="metadata" type="xsd:string">
        				<xsd:annotation>
        					<xsd:documentation>Metadata in regular XML form known for example from grf files.</xsd:documentation>
        				</xsd:annotation></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetEdgeDebugMetadataFault">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="GetEdgeDebugMetadataFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetJobExecutionHierarchy">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="rootRunId" type="xsd:long" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetJobExecutionHierarchyResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="result" type="tns:ExecutionHierarchy" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:complexType name="ExecutionHierarchy">
            <xsd:complexContent>
                <xsd:extension base="tns:ExecutionStatus">
                    <xsd:sequence>
                        <xsd:element name="children" type="tns:ExecutionHierarchy" minOccurs="0" maxOccurs="unbounded" />
                    </xsd:sequence>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        
        <xsd:element name="GetJobExecutionHierarchyFault">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="GetJobExecutionHierarchyFault"
                        type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    
        <xsd:complexType name="GraphTrackingHierarchy">
        	<xsd:sequence>
        		<xsd:element name="rootTracking"
        			type="tns:GraphTracking">
        		</xsd:element>
        		<xsd:element name="workerTrackings" type="tns:GraphTracking" maxOccurs="unbounded" minOccurs="0"></xsd:element>
        	</xsd:sequence>
        </xsd:complexType>
        <xsd:element name="ValidateClasspath">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="ValidateClasspathResponse">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="out" type="tns:ClasspathError" maxOccurs="unbounded" minOccurs="0"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
    
        <xsd:complexType name="ClasspathError">
        	<xsd:sequence>
        		<xsd:element name="classpathElement"
        			type="xsd:string">
        		</xsd:element>
        		<xsd:element name="errorMessage" type="xsd:string"></xsd:element>
        		<xsd:element name="severity" type="tns:ClasspathErrorSeverity"></xsd:element>
        	</xsd:sequence>
        </xsd:complexType>
        <xsd:element name="ValidateClasspathFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="ValidateClasspathFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
    
        <xsd:simpleType name="ClasspathErrorSeverity">
        	<xsd:restriction base="xsd:string">
        		<xsd:enumeration value="ERROR"></xsd:enumeration>
        		<xsd:enumeration value="WARNING"></xsd:enumeration>
        	</xsd:restriction>
        </xsd:simpleType>

        <xsd:element name="SynchronizeStorageIndex">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
                        <xsd:element name="filter" type="tns:FileFilter"></xsd:element>
                        <xsd:sequence>
        				<xsd:element name="files" type="tns:FileInfo"
        					maxOccurs="unbounded">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:element name="SynchronizeStorageIndexResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="differences" type="tns:FileDifference" maxOccurs="unbounded" minOccurs="0"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:complexType name="FileDifference">
        	<xsd:sequence>
       			<xsd:element name="clientFile" type="tns:FileInfo" minOccurs="0" ></xsd:element>
       			<xsd:element name="serverFile" type="tns:FileInfo" minOccurs="0" ></xsd:element>
        	</xsd:sequence>
        </xsd:complexType>

        <xsd:complexType name="FileFilter">
        	<xsd:sequence>
       			<xsd:element name="ignoredFiles" type="xsd:string" minOccurs="0" maxOccurs="1" ></xsd:element>
        	</xsd:sequence>
        </xsd:complexType>

        <xsd:element name="SynchronizeStorageIndexFault">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="SynchronizeStorageIndexFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        
        <xsd:element name="StartPropagateMetadataOperation">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
        			<xsd:element name="graphPath" type="xsd:string"></xsd:element>
        			<xsd:element name="graphFileContent" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="StartPropagateDataConnectorMetadataOperation">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken" type="xsd:string" />
        			<xsd:element name="sandboxCode" type="xsd:string" />
        			<xsd:element name="graphPath" type="xsd:string" />
        			<xsd:element name="graphFileContent" type="xsd:string" />
        			<xsd:element name="jobType" type="tns:JobType">
            			<xsd:annotation>
            				<xsd:documentation>
            					Type of job - possible values:
            					ETL_GRAPH, JOBFLOW, SUBGRAPH, RESTJOB, WRANGLER_JOB
            				</xsd:documentation>
            			</xsd:annotation>
            		</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="StartPropagateMetadataOperationResponse">
           	<xsd:complexType>
               	<xsd:sequence>
                   	<xsd:element name="handle" type="xsd:long" />
               	</xsd:sequence>
           	</xsd:complexType>
        </xsd:element>
        <xsd:element name="StartPropagateMetadataOperationFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="StartPropagateMetadataOperationFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:element name="GetPropagateMetadataOperationResult">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="graphPath" type="xsd:string"></xsd:element>
        			<xsd:element name="handle" type="xsd:long"></xsd:element>
					<xsd:element name="timeout"
						type="xsd:long" minOccurs="0" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetPropagateMetadataOperationResultResponse">
        	<xsd:complexType>
        		<xsd:sequence>
           			<xsd:element name="out" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetPropagateMetadataOperationResultFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="GetPropagateMetadataOperationResultFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:element name="AbortPropagateMetadataOperation">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="handle" type="xsd:long"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="AbortPropagateMetadataOperationResponse">
			<xsd:complexType />
        </xsd:element>
        <xsd:element name="AbortPropagateMetadataOperationFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="AbortPropagateMetadataOperationFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

		<xsd:element name="PropagateMetadata">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken"
        				type="xsd:string">
        			</xsd:element>
        			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
        			<xsd:element name="graphPath" type="xsd:string"></xsd:element>
        			<xsd:element name="graphFileContent" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="PropagateMetadataResponse">
        	<xsd:complexType>
        		<xsd:sequence>
           			<xsd:element name="out" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="PropagateMetadataFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="NewOperationFault"
        				type="xsd:string">
        			</xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>

        <xsd:element name="FetchJndiTree">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="startingContext" type="xsd:string" minOccurs="0" />
                    <xsd:element name="sandboxCode" type="xsd:string" minOccurs="0" />
                    <xsd:element name="jobFile" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="FetchJndiTreeResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="tns:JndiTreeNode" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="FetchJndiTreeFault">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="FetchJndiTreeFault" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:complexType name="JndiTreeNode">
            <xsd:sequence>
                <xsd:element name="name" type="xsd:string" />
                <xsd:element name="className" type="xsd:string" />
                <xsd:element name="type" type="tns:JndiNodeType" />
                <xsd:element name="children" type="tns:JndiTreeNode" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
        <xsd:simpleType name="JndiNodeType">
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="CONTEXT" />
                <xsd:enumeration value="NODE" />
                <xsd:enumeration value="URL" />
                <xsd:enumeration value="MAIL_SESSION" />
                <xsd:enumeration value="DATA_SOURCE" />
                <xsd:enumeration value="JMS_QUEUE" />
                <xsd:enumeration value="JMS_TOPIC" />
                <xsd:enumeration value="JMS_CONNECTION_FACTORY" />
                <xsd:enumeration value="JCA_CONNECTION_FACTORY" />
                <xsd:enumeration value="JTA_TRANSACTION" />
            </xsd:restriction>
        </xsd:simpleType>

        <xsd:element name="GetDefaults">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetDefaultsResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="out" type="tns:WSProperties"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetExecutionLogEncoding">
        	<xsd:complexType>
        		<xsd:sequence>

        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetExecutionLogEncodingResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="encoding" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        
        <xsd:element name="PublishRestJob">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="sandboxCode" type="xsd:string" />
                    <xsd:element name="jobFile" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="PublishRestJobResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="xsd:long" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="PublishRestJobFault">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="PublishRestJobFault" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="UnpublishRestJob">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="sandboxCode" type="xsd:string" />
                    <xsd:element name="jobFile" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="UnpublishRestJobResponse">
            <xsd:complexType>
                <xsd:sequence />
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetPublishedRestJobs">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetAllPublishedRestJobs">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="skipSslConfiguration" type="xsd:boolean" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetPublishedRestJobsResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="tns:RestJobInfo" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:complexType name="RestJobInfo">
            <xsd:sequence>
                <xsd:element name="id" type="xsd:long" />
                <xsd:element name="name" type="xsd:string" />
                <xsd:element name="sandboxCode" type="xsd:string" />
                <xsd:element name="jobFile" type="xsd:string" />
                <xsd:element name="urlPath" type="xsd:string" />
                <xsd:element name="methods" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="enabled" type="xsd:boolean" />
                <xsd:element name="category" type="xsd:string" minOccurs="0"/>
                <xsd:element name="sslConfigurationName" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
        
        <xsd:element name="IsRestJobPublishable">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="restjob" type="tns:RestJobInfo" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="IsRestJobPublishableResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="xsd:boolean" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetServerPlatform">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetServerPlatformResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="serverPlatform" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
		<xsd:element name="GetSecret">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        			<xsd:element name="secretManager" type="xsd:string"></xsd:element>
        			<xsd:element name="secretName" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetSecretResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="Secret" type="tns:Secret"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        
        <xsd:complexType name="RestJobUrlInfo">
            <xsd:sequence>
                <xsd:element name="scheme" type="xsd:string" />
                <xsd:element name="port" type="xsd:int" />
                <xsd:element name="contextPath" type="xsd:string" />
                <xsd:element name="docContextPath" type="xsd:string" />
            </xsd:sequence>
        </xsd:complexType>
        <xsd:element name="GetRestJobUrlInfo">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="sessionToken" type="xsd:string" />
                    <xsd:element name="sandboxCode" type="xsd:string" minOccurs="0" />
                    <xsd:element name="jobFile" type="xsd:string" minOccurs="0" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
        <xsd:element name="GetRestJobUrlInfoResponse">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="out" type="tns:RestJobUrlInfo" />
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>    
        <xsd:element name="GetAWSCredentials">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:complexType name="AWSCredentials">
            <xsd:attribute name="accessKey" type="xsd:string" />
            <xsd:attribute name="secretKey" type="xsd:string" />
            <xsd:attribute name="sessionToken" type="xsd:string" use="optional" />
        </xsd:complexType>
        <xsd:complexType name="Secret">
            <xsd:attribute name="name" type="xsd:string" />
            <xsd:attribute name="value" type="xsd:string" />
            <xsd:attribute name="expiresOn" type="xsd:long" />
            <xsd:attribute name="enabled" type="xsd:boolean" />
            <xsd:attribute name="sessionToken" type="xsd:string" use="optional" />
        </xsd:complexType>
        <xsd:element name="GetAWSCredentialsResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="out" type="tns:AWSCredentials"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="RefreshAWSCredentials">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="RefreshAWSCredentialsResponse">
            <xsd:complexType>
                <xsd:sequence />
            </xsd:complexType>
        </xsd:element>
        
        <xsd:element name="GetSystemProperties">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken" type="xsd:string" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetSystemPropertiesResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="out" type="tns:WSProperties" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetServerLog">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="sessionToken" type="xsd:string" />
        			<xsd:element name="since" type="xsd:string" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetServerLogResponse">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="out" type="xsd:string" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetServerLogFault">
        	<xsd:complexType>
        		<xsd:sequence>
        			<xsd:element name="GetServerLogFault" type="xsd:string" />
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetClusterNodeId">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetClusterNodeIdResponse">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="out" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetSandboxRoot">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
        			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetSandboxRootResponse">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="out" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        <xsd:element name="GetSandboxRootFault">
        	<xsd:complexType>
        		<xsd:sequence>

        			<xsd:element name="GetSandboxRootFault" type="xsd:string"></xsd:element>
        		</xsd:sequence>
        	</xsd:complexType>
        </xsd:element>
        
     <xsd:element name="GetLibrariesResponse">
      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="Libraries" type="tns:LibraryInfo" maxOccurs="unbounded"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
        
	<xsd:complexType name="LibraryInfo">
		<xsd:sequence>
			<xsd:element name="author" type="xsd:string"></xsd:element>
			<xsd:element name="name" type="xsd:string"></xsd:element>
			<xsd:element name="version" type="xsd:string"></xsd:element>
			<xsd:element name="productVersion" type="xsd:string"></xsd:element>
			<xsd:element name="description" type="xsd:string"></xsd:element>
			<xsd:element name="sandboxCode" type="xsd:string"></xsd:element>
			<xsd:element name="libraryId" type="xsd:string"></xsd:element>
			<xsd:element name="longLabel" type="xsd:string"></xsd:element>
			<xsd:element name="customDescription" type="xsd:string"></xsd:element>
			<xsd:element name="subgraphs" type="tns:SubgraphInfo"
				minOccurs="0" maxOccurs="unbounded"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="SubgraphInfo">
		<xsd:sequence>
			<xsd:element name="path" type="xsd:string"></xsd:element>
			<xsd:element name="description" type="xsd:string"></xsd:element>
			<xsd:element name="icon" type="xsd:string"></xsd:element>
			<xsd:element name="mediumIcon" type="xsd:string"></xsd:element>
			<xsd:element name="largeIcon" type="xsd:string"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>

		<xsd:element name="GetDataSets">
			<xsd:complexType>
				<xsd:sequence>
					<xsd:element name="sessionToken" type="xsd:string"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:element>

		<xsd:element name="GetDataSetsResponse">
			<xsd:complexType>
				<xsd:sequence>
					<xsd:element name="dataSets" type="tns:DataSetInfo" maxOccurs="unbounded"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:element>

		<xsd:complexType name="DataSetInfo">
			<xsd:sequence>
				<xsd:element name="name" type="xsd:string"></xsd:element>
				<xsd:element name="code" type="xsd:string"></xsd:element>
				<xsd:element name="description" type="xsd:string"></xsd:element>
			</xsd:sequence>
		</xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="LoginRequest">
    <wsdl:part element="tns:Login" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="LoginResponse">
    <wsdl:part element="tns:LoginResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="GetSandboxesRequest">
  	<wsdl:part name="parameters" element="tns:GetSandboxes"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSandboxesResponse">
  	<wsdl:part name="parameters" element="tns:GetSandboxesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSandboxesAndLibrariesRequest">
  	<wsdl:part name="parameters" element="tns:GetSandboxesAndLibraries"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSandboxesAndLibrariesResponse">
  	<wsdl:part name="parameters" element="tns:GetSandboxesAndLibrariesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSandboxRequest">
  	<wsdl:part name="parameters" element="tns:GetSandbox"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetSandboxResponse">
  	<wsdl:part name="parameters" element="tns:GetSandboxResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserRequest">
  	<wsdl:part name="parameters" element="tns:GetUser"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserResponse">
  	<wsdl:part name="parameters" element="tns:GetUserResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DownloadFileContentRequest">
  	<wsdl:part name="parameters" element="tns:DownloadFileContent"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DownloadFileContentResponse">
  	<wsdl:part name="parameters" element="tns:DownloadFileContentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="LogoutRequest">
  	<wsdl:part name="parameters" element="tns:Logout"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListFilesRequest">
  	<wsdl:part name="parameters" element="tns:ListFiles"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListFilesResponse">
  	<wsdl:part name="parameters" element="tns:ListFilesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UploadFileContentRequest">
  	<wsdl:part name="parameters" element="tns:UploadFileContent"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UploadFileContentResponse">
  	<wsdl:part name="parameters" element="tns:UploadFileContentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopySandboxFileRequest">
  	<wsdl:part name="parameters" element="tns:CopySandboxFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopyFileRequest">
  	<wsdl:part name="parameters" element="tns:CopyFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFileRequest">
  	<wsdl:part name="parameters" element="tns:CreateFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSandboxFileRequest">
  	<wsdl:part name="parameters" element="tns:CreateSandboxFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFolderRequest">
  	<wsdl:part name="parameters" element="tns:CreateFolder"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteFileRequest">
  	<wsdl:part name="parameters" element="tns:DeleteFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveSandboxFileRequest">
  	<wsdl:part name="parameters" element="tns:MoveSandboxFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveFileRequest">
  	<wsdl:part name="parameters" element="tns:MoveFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameSandboxFileRequest">
  	<wsdl:part name="parameters" element="tns:RenameSandboxFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameFileRequest">
  	<wsdl:part name="parameters" element="tns:RenameFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="LogoutResponse">
  	<wsdl:part name="parameters" element="tns:LogoutResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DownloadFileContent_faultMsg">
  	<wsdl:part name="parameters" element="tns:DownloadFileContent_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListFiles_faultMsg">
  	<wsdl:part name="parameters" element="tns:ListFiles_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFileRequest">
  	<wsdl:part name="parameters" element="tns:GetFile"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFileResponse">
  	<wsdl:part name="parameters" element="tns:GetFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UploadFileContent_faultMsg">
  	<wsdl:part name="parameters" element="tns:UploadFileContent_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteDirectoryRequest">
  	<wsdl:part name="parameters" element="tns:DeleteDirectory"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteDirectoryResponse">        <wsdl:part name="parameters" element="tns:DeleteDirectoryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteDirectory_faultMsg">
  	<wsdl:part name="parameters" element="tns:DeleteDirectory_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteGraphRequest">
  	<wsdl:part name="parameters" element="tns:ExecuteGraph"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteFileResponse">
  	<wsdl:part name="parameters" element="tns:DeleteFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:DeleteFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFolderResponse">
  	<wsdl:part name="parameters" element="tns:CreateFolderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSandboxFileResponse">
  	<wsdl:part name="parameters" element="tns:CreateSandboxFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFileResponse">
  	<wsdl:part name="parameters" element="tns:CreateFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateSandboxFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:CreateSandboxFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:CreateFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateFolder_faultMsg">
  	<wsdl:part name="parameters" element="tns:CreateFolder_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopySandboxFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:CopySandboxFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopyFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:CopyFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveSandboxFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:MoveSandboxFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:MoveFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameSandboxFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:RenameSandboxFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameFile_faultMsg">
  	<wsdl:part name="parameters" element="tns:RenameFile_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopySandboxFileResponse">
  	<wsdl:part name="parameters" element="tns:CopySandboxFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CopyFileResponse">
  	<wsdl:part name="parameters" element="tns:CopyFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveSandboxFileResponse">
  	<wsdl:part name="parameters" element="tns:MoveSandboxFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MoveFileResponse">
  	<wsdl:part name="parameters" element="tns:MoveFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameSandboxFileResponse">
  	<wsdl:part name="parameters" element="tns:RenameSandboxFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RenameFileResponse">
  	<wsdl:part name="parameters" element="tns:RenameFileResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Logout_faultMsg">
  	<wsdl:part name="parameters" element="tns:Logout_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteGraphResponse1">
  	<wsdl:part name="parameters" element="tns:ExecuteGraphResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExecuteGraph_faultMsg">
  	<wsdl:part name="parameters" element="tns:ExecuteGraph_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionLogRequest">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionLog"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionLogResponse1">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionLogResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionLog_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionLog_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SetLastModifiedRequest">
  	<wsdl:part name="parameters" element="tns:SetLastModified"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SetLastModifiedResponse1">
  	<wsdl:part name="parameters" element="tns:SetLastModifiedResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SetLastModified_faultMsg">
  	<wsdl:part name="parameters" element="tns:SetLastModified_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphTrackingRequest">
  	<wsdl:part name="parameters" element="tns:GetGraphTracking"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphTrackingResponse1">
  	<wsdl:part name="parameters" element="tns:GetGraphTrackingResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphTracking_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetGraphTracking_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionStatusRequest">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionStatus"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetJobExecutionStatusRequest">
  	<wsdl:part name="parameters" element="tns:GetJobExecutionStatus"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionStatusResponse1">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGraphExecutionStatus_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetGraphExecutionStatus_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillGraphRequest">
  	<wsdl:part name="parameters" element="tns:KillGraph"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillGraphResponse1">
  	<wsdl:part name="parameters" element="tns:KillGraphResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillGraph_faultMsg">
  	<wsdl:part name="parameters" element="tns:KillGraph_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigResultRequest">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigResultResponse1">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigResultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigResult_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigResult_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartCheckConfigOperationRequest">
  	<wsdl:part name="parameters" element="tns:StartCheckConfigOperation"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartCheckConfigOperationResponse1">
  	<wsdl:part name="parameters" element="tns:StartCheckConfigOperationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartCheckConfigOperation_faultMsg">
  	<wsdl:part name="parameters" element="tns:StartCheckConfigOperation_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigOperationResultRequest">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigOperationResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigOperationResultResponse1">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigOperationResultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetCheckConfigOperationResult_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigOperationResult_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortCheckConfigOperationRequest">
  	<wsdl:part name="parameters" element="tns:AbortCheckConfigOperation"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortCheckConfigOperationResponse1">
  	<wsdl:part name="parameters" element="tns:AbortCheckConfigOperationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortCheckConfigOperation_faultMsg">
  	<wsdl:part name="parameters" element="tns:AbortCheckConfigOperation_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartValidateConnectionOperationRequest">
  	<wsdl:part name="parameters" element="tns:StartValidateConnectionOperation"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartValidateConnectionOperationResponse1">
  	<wsdl:part name="parameters" element="tns:StartValidateConnectionOperationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StartValidateConnectionOperation_faultMsg">
  	<wsdl:part name="parameters" element="tns:StartValidateConnectionOperation_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetValidateConnectionOperationResultRequest">
  	<wsdl:part name="parameters" element="tns:GetValidateConnectionOperationResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetValidateConnectionOperationResponse1">
  	<wsdl:part name="parameters" element="tns:GetValidateConnectionOperationResultResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetValidateConnectionOperationResult_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetCheckConfigOperationResult_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortValidateConnectionOperationRequest">
  	<wsdl:part name="parameters" element="tns:AbortValidateConnectionOperation"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortValidateConnectionOperationResponse1">
  	<wsdl:part name="parameters" element="tns:AbortValidateConnectionOperationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AbortValidateConnectionOperation_faultMsg">
  	<wsdl:part name="parameters" element="tns:AbortValidateConnectionOperation_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2AuthorizationUrlRequest">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2AuthorizationUrl"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2AuthorizationUrlResponse">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2AuthorizationUrlResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2AuthorizationUrl_faultMsg">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2AuthorizationUrlResponse_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="IsOAuth2ConnectionAuthorizedRequest">
  	<wsdl:part name="parameters" element="tns:IsOAuth2ConnectionAuthorized"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="IsOAuth2ConnectionAuthorizedResponse">
  	<wsdl:part name="parameters" element="tns:IsOAuth2ConnectionAuthorizedResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="IsOAuth2ConnectionAuthorized_faultMsg">
  	<wsdl:part name="parameters" element="tns:IsOAuth2ConnectionAuthorizedResponse_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2DefaultRedirectUrlRequest">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2DefaultRedirectUrl"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2DefaultRedirectUrlResponse">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2DefaultRedirectUrlResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateOAuth2DefaultRedirectUrl_faultMsg">
  	<wsdl:part name="parameters" element="tns:GenerateOAuth2DefaultRedirectUrlResponse_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEdgeDebugDataRequest">
  	<wsdl:part name="parameters" element="tns:GetEdgeDebugData"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEdgeDebugDataResponse1">
  	<wsdl:part name="parameters" element="tns:GetEdgeDebugDataResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEdgeDebugData_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetEdgeDebugData_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PrepareDataViewRequest">
    <wsdl:part name="parameters" element="tns:PrepareDataView" />
  </wsdl:message>
  <wsdl:message name="PrepareDataViewResponse">
    <wsdl:part name="parameters" element="tns:PrepareDataViewResponse" />
  </wsdl:message>
  <wsdl:message name="FetchDataViewRequest">
    <wsdl:part name="parameters" element="tns:FetchDataView" />
  </wsdl:message>
  <wsdl:message name="FetchDataViewResponse">
    <wsdl:part name="parameters" element="tns:FetchDataViewResponse" />
  </wsdl:message>
  <wsdl:message name="DisposeDataViewRequest">
    <wsdl:part name="parameters" element="tns:DisposeDataView" />
  </wsdl:message>
  <wsdl:message name="DisposeDataViewResponse">
    <wsdl:part name="parameters" element="tns:DisposeDataViewResponse" />
  </wsdl:message>
  
  <wsdl:message name="GetViewData_faultMsg">
  	<wsdl:part name="parameters" element="tns:GetViewData_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoRequest">
  	<wsdl:part name="parameters" element="tns:echo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoResponse">
  	<wsdl:part name="parameters" element="tns:echoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoFault">
  	<wsdl:part name="parameters" element="tns:echoFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobRequest">
  	<wsdl:part name="parameters" element="tns:KillJob"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobResponse">
  	<wsdl:part name="parameters" element="tns:KillJobResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobFault">
  	<wsdl:part name="parameters" element="tns:KillJobFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobsRequest">
  	<wsdl:part name="parameters" element="tns:KillJobs"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobsResponse1">
  	<wsdl:part name="parameters" element="tns:KillJobsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="KillJobsFault">
  	<wsdl:part name="parameters" element="tns:KillJobsFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetEdgeDebugInfoListRequest">
        <wsdl:part name="parameters" element="tns:GetEdgeDebugInfoList"></wsdl:part>
  </wsdl:message>
    <wsdl:message name="GetEdgeDebugInfoListResponse">
        <wsdl:part name="parameters" element="tns:GetEdgeDebugInfoListResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetEdgeDebugInfoListFault">
        <wsdl:part name="parameters" element="tns:GetEdgeDebugInfoListFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CreateSandboxRequest">
        <wsdl:part name="parameters" element="tns:CreateSandbox" />
    </wsdl:message>
    <wsdl:message name="CreateSandboxResponse">
        <wsdl:part name="parameters" element="tns:CreateSandboxResponse" />
    </wsdl:message>
    <wsdl:message name="CreateSandboxFault">
        <wsdl:part name="parameters" element="tns:CreateSandboxFault" />
    </wsdl:message>
    <wsdl:message name="DeleteSandboxRequest">
        <wsdl:part name="parameters" element="tns:DeleteSandbox" />
    </wsdl:message>
    <wsdl:message name="DeleteSandboxResponse">
        <wsdl:part name="parameters" element="tns:DeleteSandboxResponse" />
    </wsdl:message>
    <wsdl:message name="DeleteSandboxFault">
        <wsdl:part name="parameters" element="tns:DeleteSandboxFault" />
    </wsdl:message>
    <wsdl:message name="IsClusterRequest">
        <wsdl:part name="parameters" element="tns:IsCluster" />
    </wsdl:message>
    <wsdl:message name="IsClusterResponse">
        <wsdl:part name="parameters" element="tns:IsClusterResponse" />
    </wsdl:message>
    <wsdl:message name="IsPartitioningRequest">
        <wsdl:part name="parameters" element="tns:IsPartitioning" />
    </wsdl:message>
    <wsdl:message name="IsPartitioningResponse">
        <wsdl:part name="parameters" element="tns:IsPartitioningResponse" />
    </wsdl:message>
    <wsdl:message name="GetTimeZoneRequest">
        <wsdl:part name="parameters" element="tns:GetTimeZone" />
    </wsdl:message>
    <wsdl:message name="GetTimeZoneResponse">
        <wsdl:part name="parameters" element="tns:GetTimeZoneResponse" />
    </wsdl:message>
    <wsdl:message name="GetClusterNodesInfo">
        <wsdl:part name="parameters" element="tns:GetClusterNodesInfo" />
    </wsdl:message>
    <wsdl:message name="GetClusterNodesInfoResponse">
        <wsdl:part name="parameters" element="tns:GetClusterNodesInfoResponse" />
    </wsdl:message>
    <wsdl:message name="GetChildJobsRequest">
    	<wsdl:part name="parameters" element="tns:GetChildJobs"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetChildJobsResponse">
    	<wsdl:part name="parameters" element="tns:GetChildJobsResponse"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="AnalyseGraphRequest">
    	<wsdl:part name="parameters" element="tns:AnalyseGraph"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="AnalyseGraphResponse">
    	<wsdl:part name="parameters" element="tns:AnalyseGraphResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="EncryptTextRequest">
    	<wsdl:part name="parameters" element="tns:EncryptText"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="EncryptTextResponse">
    	<wsdl:part name="parameters" element="tns:EncryptTextResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="IsSecureParamPasswdAvailableRequest">
    	<wsdl:part name="parameters" element="tns:IsSecureParamPasswdAvailable"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="IsSecureParamPasswdAvailableResponse">
    	<wsdl:part name="parameters" element="tns:IsSecureParamPasswdAvailableResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UpdateSecureParamPasswdRequest">
        <wsdl:part name="parameters" element="tns:UpdateSecureParamPasswd"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UpdateSecureParamPasswdResponse">
        <wsdl:part name="parameters" element="tns:UpdateSecureParamPasswdResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="UpdateSecureParamPasswdFault">
        <wsdl:part name="parameters" element="tns:UpdateSecureParamPasswdFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ExportServerConfigurationRequest">
    	<wsdl:part name="parameters" element="tns:ExportServerConfiguration"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ExportServerConfigurationResponse">
    	<wsdl:part name="parameters" element="tns:ExportServerConfigurationResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ExportServerConfigurationFault">
    	<wsdl:part name="parameters" element="tns:ExportServerConfigurationFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ImportServerConfigurationResponse">
    	<wsdl:part name="parameters" element="tns:ImportServerConfigurationResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ImportServerConfigurationRequest">
    	<wsdl:part name="parameters" element="tns:ImportServerConfiguration"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ImportServerConfigurationFault">
    	<wsdl:part name="parameters" element="tns:ImportServerConfigurationFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="DecryptTextRequest">
    	<wsdl:part name="parameters" element="tns:DecryptText"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="DecryptTextResponse">
    	<wsdl:part name="parameters" element="tns:DecryptTextResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetCloverVersionRequest">
        <wsdl:part name="parameters" element="tns:GetCloverVersion" />
    </wsdl:message>
    <wsdl:message name="GetCloverVersionResponse">
        <wsdl:part name="parameters" element="tns:GetCloverVersionResponse" />
    </wsdl:message>
    <wsdl:message name="GetDataSetMetadataRequest">
    	<wsdl:part name="parameters" element="tns:GetDataSetMetadata"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetDataSetMetadataResponse">
    	<wsdl:part name="parameters" element="tns:GetDataSetMetadataResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetDataSetMetadataFault">
    	<wsdl:part name="parameters" element="tns:GetDataSetMetadataFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetEdgeDebugMetadataRequest">
    	<wsdl:part name="parameters" element="tns:GetEdgeDebugMetadata"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetEdgeDebugMetadataResponse">
    	<wsdl:part name="parameters" element="tns:GetEdgeDebugMetadataResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetEdgeDebugMetadataFault">
    	<wsdl:part name="parameters" element="tns:GetEdgeDebugMetadataFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetJobExecutionHierarchyRequest">
        <wsdl:part name="parameters" element="tns:GetJobExecutionHierarchy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetJobExecutionHierarchyResponse">
        <wsdl:part name="parameters" element="tns:GetJobExecutionHierarchyResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetJobExecutionHierarchyFault">
        <wsdl:part name="parameters" element="tns:GetJobExecutionHierarchyFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ValidateClasspathRequest">
    	<wsdl:part name="parameters" element="tns:ValidateClasspath"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ValidateClasspathResponse">
    	<wsdl:part name="parameters" element="tns:ValidateClasspathResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="ValidateClasspathFault">
    	<wsdl:part name="parameters" element="tns:ValidateClasspathFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="SynchronizeStorageIndexRequest">
    	<wsdl:part name="parameters" element="tns:SynchronizeStorageIndex"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="SynchronizeStorageIndexResponse">
    	<wsdl:part name="parameters" element="tns:SynchronizeStorageIndexResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="SynchronizeStorageIndexFault">
    	<wsdl:part name="parameters" element="tns:SynchronizeStorageIndexFault"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="StartPropagateMetadataOperationRequest">
    	<wsdl:part name="parameters" element="tns:StartPropagateMetadataOperation"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="StartPropagateDataConnectorMetadataOperationRequest">
    	<wsdl:part name="parameters" element="tns:StartPropagateDataConnectorMetadataOperation"></wsdl:part>
    </wsdl:message>
	<wsdl:message name="StartPropagateMetadataOperationResponse">
		<wsdl:part name="parameters" element="tns:StartPropagateMetadataOperationResponse"></wsdl:part>
	</wsdl:message>
    <wsdl:message name="StartPropagateMetadataOperationFault">
    	<wsdl:part name="parameters" element="tns:StartPropagateMetadataOperationFault"></wsdl:part>
    </wsdl:message>    
    <wsdl:message name="GetPropagateMetadataOperationResultRequest">
    	<wsdl:part name="parameters" element="tns:GetPropagateMetadataOperationResult"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetPropagateMetadataOperationResultResponse">
    	<wsdl:part name="parameters" element="tns:GetPropagateMetadataOperationResultResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetPropagateMetadataOperationResultFault">
    	<wsdl:part name="parameters" element="tns:GetPropagateMetadataOperationResultFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="AbortPropagateMetadataOperationRequest">
    	<wsdl:part name="parameters" element="tns:AbortPropagateMetadataOperation"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="AbortPropagateMetadataOperationResponse">
    	<wsdl:part name="parameters" element="tns:AbortPropagateMetadataOperationResponse"></wsdl:part>
    </wsdl:message>
	<wsdl:message name="AbortPropagateMetadataOperationFault">
		<wsdl:part name="parameters" element="tns:AbortPropagateMetadataOperationFault"></wsdl:part>
	</wsdl:message>

	<wsdl:message name="PropagateMetadataRequest">
		<wsdl:part name="parameters" element="tns:PropagateMetadata"></wsdl:part>
	</wsdl:message>
    <wsdl:message name="PropagateMetadataResponse">
    	<wsdl:part name="parameters" element="tns:PropagateMetadataResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="PropagateMetadataFault">
    	<wsdl:part name="parameters" element="tns:PropagateMetadataFault"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="FetchJndiTreeRequest">
        <wsdl:part name="parameters" element="tns:FetchJndiTree"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="FetchJndiTreeResponse">
        <wsdl:part name="parameters" element="tns:FetchJndiTreeResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="FetchJndiTreeFault">
        <wsdl:part name="parameters" element="tns:FetchJndiTreeFault"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="GetDefaultsRequest">
    	<wsdl:part name="parameters" element="tns:GetDefaults"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetDefaultsResponse">
    	<wsdl:part name="parameters" element="tns:GetDefaultsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetExecutionLogEncodingRequest">
    	<wsdl:part name="parameters" element="tns:GetExecutionLogEncoding"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetExecutionLogEncodingResponse">
    	<wsdl:part name="parameters" element="tns:GetExecutionLogEncodingResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="PublishRestJobRequest">
        <wsdl:part name="parameters" element="tns:PublishRestJob" />
    </wsdl:message>
    <wsdl:message name="PublishRestJobResponse">
        <wsdl:part name="parameters" element="tns:PublishRestJobResponse" />
    </wsdl:message>
    <wsdl:message name="PublishRestJobFault">
        <wsdl:part name="paramaters" element="tns:PublishRestJobFault" />
    </wsdl:message>
    <wsdl:message name="UnpublishRestJobRequest">
        <wsdl:part name="parameters" element="tns:UnpublishRestJob" />
    </wsdl:message>
    <wsdl:message name="UnpublishRestJobResponse">
        <wsdl:part name="parameters" element="tns:UnpublishRestJobResponse" />
    </wsdl:message>
    <wsdl:message name="GetPublishedRestJobsRequest">
        <wsdl:part name="parameters" element="tns:GetPublishedRestJobs" />
    </wsdl:message>
    <wsdl:message name="GetAllPublishedRestJobsRequest">
        <wsdl:part name="parameters" element="tns:GetAllPublishedRestJobs" />
    </wsdl:message>
    <wsdl:message name="GetPublishedRestJobsResponse">
        <wsdl:part name="parameters" element="tns:GetPublishedRestJobsResponse" />
    </wsdl:message>
    <wsdl:message name="IsRestJobPublishableRequest">
        <wsdl:part name="parameters" element="tns:IsRestJobPublishable" />
    </wsdl:message>
    <wsdl:message name="IsRestJobPublishableResponse">
        <wsdl:part name="parameters" element="tns:IsRestJobPublishableResponse" />
    </wsdl:message>
    <wsdl:message name="GetServerPlatformRequest">
    	<wsdl:part name="parameters" element="tns:GetServerPlatform"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetServerPlatformResponse">
    	<wsdl:part name="parameters" element="tns:GetServerPlatformResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetSecretRequest">
    	<wsdl:part name="parameters" element="tns:GetSecret"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetSecretResponse">
    	<wsdl:part name="parameters" element="tns:GetSecretResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetRestJobUrlInfoRequest">
        <wsdl:part name="parameters" element="tns:GetRestJobUrlInfo" />
    </wsdl:message>
    <wsdl:message name="GetRestJobUrlInfoResponse">
        <wsdl:part name="parameters" element="tns:GetRestJobUrlInfoResponse" />
    </wsdl:message>
    <wsdl:message name="GetAWSCredentialsRequest">
        <wsdl:part name="parameters" element="tns:GetAWSCredentials" />
    </wsdl:message>
    <wsdl:message name="GetAWSCredentialsResponse">
        <wsdl:part name="parameters" element="tns:GetAWSCredentialsResponse" />
    </wsdl:message>
    <wsdl:message name="RefreshAWSCredentialsRequest">
        <wsdl:part name="parameters" element="tns:RefreshAWSCredentials" />
    </wsdl:message>
    <wsdl:message name="RefreshAWSCredentialsResponse">
        <wsdl:part name="parameters" element="tns:RefreshAWSCredentialsResponse" />
    </wsdl:message>
    <wsdl:message name="GetSystemPropertiesRequest">
        <wsdl:part name="parameters" element="tns:GetSystemProperties" />
    </wsdl:message>
    <wsdl:message name="GetSystemPropertiesResponse">
        <wsdl:part name="parameters" element="tns:GetSystemPropertiesResponse" />
    </wsdl:message>
    <wsdl:message name="GetServerLogRequest">
    	<wsdl:part name="parameters" element="tns:GetServerLog" />
    </wsdl:message>
    <wsdl:message name="GetServerLogResponse">
    	<wsdl:part name="parameters" element="tns:GetServerLogResponse" />
    </wsdl:message>
    <wsdl:message name="GetServerLogFault">
    	<wsdl:part name="parameters" element="tns:GetServerLogFault" />
    </wsdl:message>
    <wsdl:message name="GetClusterNodeIdRequest">
    	<wsdl:part name="parameters" element="tns:GetClusterNodeId"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetClusterNodeIdResponse">
    	<wsdl:part name="parameters" element="tns:GetClusterNodeIdResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetSandboxRootRequest">
    	<wsdl:part name="parameters" element="tns:GetSandboxRoot"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetSandboxRootResponse">
    	<wsdl:part name="parameters" element="tns:GetSandboxRootResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetSandboxRootFault">
    	<wsdl:part name="parameters" element="tns:GetSandboxRootFault"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetLibrariesRequest">
  		<wsdl:part name="parameters" element="tns:GetLibraries"></wsdl:part>
  	</wsdl:message>
  	<wsdl:message name="GetLibrariesResponse">
  		<wsdl:part name="parameters" element="tns:GetLibrariesResponse"></wsdl:part>
  	</wsdl:message>
  	<wsdl:message name="GetDataSetsRequest">
  		<wsdl:part name="parameters" element="tns:GetDataSets"></wsdl:part>
  	</wsdl:message>
  	<wsdl:message name="GetDataSetsResponse">
  		<wsdl:part name="parameters" element="tns:GetDataSetsResponse"></wsdl:part>
  	</wsdl:message>
  	<wsdl:portType name="CloverServerWS">
    <wsdl:operation name="Login">
      <wsdl:documentation>Operation login returns new session for specified user. Valid session token which is included in the response has to be used as parameter of another operations. Specified locale is also used for assembling all text messages in the same session. </wsdl:documentation>
      <wsdl:input message="tns:LoginRequest"/>
      <wsdl:output message="tns:LoginResponse"/>
    </wsdl:operation>
    <wsdl:operation name="Logout">
    	<wsdl:documentation>Invalidates specified session. Should be called everytime the session should be closed. </wsdl:documentation>
    	<wsdl:input message="tns:LogoutRequest"></wsdl:input>

    	<wsdl:output message="tns:LogoutResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:Logout_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetSandboxes">
    	<wsdl:documentation>Operation getSandboxes returns list of all sandboxes. Returns list of data structure SandboxInfo which contains detail info about sandbox. </wsdl:documentation>
    	<wsdl:input message="tns:GetSandboxesRequest"></wsdl:input>
    	<wsdl:output message="tns:GetSandboxesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSandbox">
    	<wsdl:documentation>Operation getSandbox returns detail info for specified sandbox. </wsdl:documentation>
    	<wsdl:input message="tns:GetSandboxRequest"></wsdl:input>
    	<wsdl:output message="tns:GetSandboxResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUser">
    	<wsdl:documentation>Operation getUser returns detail info about specifid user. </wsdl:documentation>
    	<wsdl:input message="tns:GetUserRequest"></wsdl:input>
    	<wsdl:output message="tns:GetUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DownloadFileContent">
    	<wsdl:documentation>Returns specified file from specified sandbox. FilePath  parameter is relative path to the sandbox root. It can return only sandbox files, not any file on the filesystem.  Returns handler which represents data stream.</wsdl:documentation>
    	<wsdl:input message="tns:DownloadFileContentRequest"></wsdl:input>
    	<wsdl:output message="tns:DownloadFileContentResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:DownloadFileContent_faultMsg"></wsdl:fault>
        </wsdl:operation>    <wsdl:operation name="UploadFileContent">    	<wsdl:documentation>Operation uploadFileContent writes specified data to the specified file in specified sandbox. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>    	<wsdl:input message="tns:UploadFileContentRequest"></wsdl:input>
    	<wsdl:output message="tns:UploadFileContentResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:UploadFileContent_faultMsg"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="ListFiles">    	<wsdl:documentation>Returns list of files/folders in specified folder in specified sandbox. Instance of FileInfo contains detail info about the file. </wsdl:documentation>    	<wsdl:input message="tns:ListFilesRequest"></wsdl:input>    	<wsdl:output message="tns:ListFilesResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:ListFiles_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="CopySandboxFile">
    	<wsdl:documentation>Operation CopySandboxFile copies specified file from specified sandbox to the specified file in specified sandbox. Returns list of created files. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:CopySandboxFileRequest"></wsdl:input>

    	<wsdl:output message="tns:CopySandboxFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:CopySandboxFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="CopyFile">
    	<wsdl:documentation>This operation is deprecated. Please, use the "CopySandboxFile" operation instead. Operation copyFile copies specified file from specified sandbox to the specified file in specified sandbox. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:CopyFileRequest"></wsdl:input>

    	<wsdl:output message="tns:CopyFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:CopyFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="CreateSandboxFile">
    	<wsdl:documentation>Operation createSandboxFile creates specified empty file in specified sandbox. Returns created file metadata. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:CreateSandboxFileRequest"></wsdl:input>
    	<wsdl:output message="tns:CreateSandboxFileResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:CreateSandboxFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="CreateFile">
    	<wsdl:documentation>This operation is deprecated. Use CreateSandboxFile instead. Operation createFile creates specified empty in specified sandbox. Please don't rely on the result. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:CreateFileRequest"></wsdl:input>
    	<wsdl:output message="tns:CreateFileResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:CreateFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="CreateFolder">
    	<wsdl:documentation>Operation createFolder creates specified new folder in specified sandbox. Please don't rely on the result. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:CreateFolderRequest"></wsdl:input>
    	<wsdl:output message="tns:CreateFolderResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:CreateFolder_faultMsg"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteFile">
    	<wsdl:documentation>Operation deleteFile removes specified file from specified sandbox. It can't remove folders, just files. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:DeleteFileRequest"></wsdl:input>

    	<wsdl:output message="tns:DeleteFileResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:DeleteFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="MoveSandboxFile">
    	<wsdl:documentation>Operation moveSandboxFile moves specified file or folder from specified sandbox to the specified file/folder in specified sandbox. Returns list of created sandbox items. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:MoveSandboxFileRequest"></wsdl:input>
    	<wsdl:output message="tns:MoveSandboxFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:MoveSandboxFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="MoveFile">
    	<wsdl:documentation>This operation is deprecated. Please, use the "MoveSandboxFile" operation instead. Operation moveFile moves specified file from specified sandbox to the specified file in specified sandbox. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:MoveFileRequest"></wsdl:input>

    	<wsdl:output message="tns:MoveFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:MoveFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="RenameSandboxFile">
    	<wsdl:documentation>Operation renameSandboxFile renames specified file or folder from specified sandbox. Returns list of created (renamed) sandbox items. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:RenameSandboxFileRequest"></wsdl:input>

    	<wsdl:output message="tns:RenameSandboxFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:RenameSandboxFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="RenameFile">
    	<wsdl:documentation>This operation is deprecated. Please, use the "RenameSandboxFile" operation instead. Operation renameFile renames specified file from specified sandbox. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:RenameFileRequest"></wsdl:input>

    	<wsdl:output message="tns:RenameFileResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:RenameFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetFile">
    	<wsdl:documentation>Operation getFile returns detail info about specified file in specified sandbox. File is specified by repative path from sandbox root. </wsdl:documentation>
    	<wsdl:input message="tns:GetFileRequest"></wsdl:input>
    	<wsdl:output message="tns:GetFileResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetFile_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="DeleteDirectory">
    	<wsdl:documentation>Operation deleteDirectory removed specified folder from specified sandbox. Folder is specified by relative path to the sandbox root. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:DeleteDirectoryRequest"></wsdl:input>
    	<wsdl:output message="tns:DeleteDirectoryResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:DeleteDirectory_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="ExecuteGraph">
    	<wsdl:documentation>Operation executeGraph starts specified transformation graph. Graph is specified by relative path to the graph file from the root of specified sandbox. Returns runId of long type, which is ID of transformation run and you can use it as parameter for another operations. Parameter &quot;debugEnabled&quot; is switch, when enabled, graph edges with debug enabled create temporary files with the edge data. When &quot;debugEnabled&quot; is disabled, no edge data is stored nevertheless the edge has debug enabled or not. Operation is not synchronous, so the response is returned when transformation is started, it doesn't wait until it's finished. 

'runtimeContext' attribute can be used to pass runtime settings (analogy for GraphRuntimeContext configuration object).

Accepted values:
skipCheckConfig - enforce skipping of graph configuration check (see GraphRuntimeContext.PropertyKey)
</wsdl:documentation>
    	<wsdl:input message="tns:ExecuteGraphRequest"></wsdl:input>
    	<wsdl:output message="tns:ExecuteGraphResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:ExecuteGraph_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetGraphExecutionLog">
    	<wsdl:documentation>Operation getGraphExecutionLog returns current content of log file for specified graph run. Graph run is specified by parameter runID, which is returned by &quot;executeGraph&quot; operation. Since this operation may be called while the graph is still running and the log file is still growing, you can use parameter &quot;offset&quot; to skip some bytes which were already read. 
Returns handler which represents data stream </wsdl:documentation>
    	<wsdl:input message="tns:GetGraphExecutionLogRequest"></wsdl:input>
    	<wsdl:output message="tns:GetGraphExecutionLogResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetGraphExecutionLog_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="SetLastModified">
    	<wsdl:documentation>Operation setLastModified sets the modification timestamp of specified file or folder in the specified sandbox. Returns simple text code of operation result. Please don't rely on the result code. To check an error properly, you must handle the exceptions. </wsdl:documentation>
    	<wsdl:input message="tns:SetLastModifiedRequest"></wsdl:input>
    	<wsdl:output message="tns:SetLastModifiedResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:SetLastModified_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetGraphTracking">
    	<wsdl:documentation>Operation getGraphTracking returns graph trackign info about graph run specified by runID. Graph transformation may be still running or not. 
Returned structure GraphTracking contains info about phases, components and their in/out ports. </wsdl:documentation>
    	<wsdl:input message="tns:GetGraphTrackingRequest"></wsdl:input>
    	<wsdl:output message="tns:GetGraphTrackingResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetGraphTracking_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetGraphExecutionStatus">
    	<wsdl:documentation>Deprecated method. Use GetJobExecutionStatus instead.</wsdl:documentation>
    	<wsdl:input message="tns:GetGraphExecutionStatusRequest"></wsdl:input>
    	<wsdl:output message="tns:GetGraphExecutionStatusResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetGraphExecutionStatus_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetJobExecutionStatus">
    	<wsdl:documentation>Returns current status of specified graph execution. It may be either currently running graph or already finished graph. 
In dependence on waitForStatus parameter may return result immediately or wait for specified status, but if graph is in some of the final status (FINISHED_OK | ERROR | ABORTED), returns current status at once. 
</wsdl:documentation>
    	<wsdl:input message="tns:GetJobExecutionStatusRequest"></wsdl:input>
    	<wsdl:output message="tns:GetGraphExecutionStatusResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetGraphExecutionStatus_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="KillGraph">
    	<wsdl:documentation>Tries to kill currently running graph. Returns final transformation status, which should be ABORTED. If specified runID belongs to execution which is already finished, returns it's final status too. It could be FINISHED_OK or ERROR. </wsdl:documentation>
    	<wsdl:input message="tns:KillGraphRequest"></wsdl:input>
    	<wsdl:output message="tns:KillGraphResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:KillGraph_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetCheckConfigResult">
    	<wsdl:documentation>Runs checkconfig on the specified graph and returns list of problems detected in the graph.</wsdl:documentation>
    	<wsdl:input message="tns:GetCheckConfigResultRequest"></wsdl:input>
    	<wsdl:output message="tns:GetCheckConfigResultResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetCheckConfigResult_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="StartCheckConfigOperation">
    	<wsdl:documentation>Runs checkconfig asynchronously on the specified graph and returns a handle to obtain results later or even abort the operation.</wsdl:documentation>
    	<wsdl:input message="tns:StartCheckConfigOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:StartCheckConfigOperationResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:StartCheckConfigOperation_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetCheckConfigOperationResult">
    	<wsdl:documentation>Returns list of problems detected in the graph by asynchronously executed checkconfig operation.</wsdl:documentation>
    	<wsdl:input message="tns:GetCheckConfigOperationResultRequest"></wsdl:input>
    	<wsdl:output message="tns:GetCheckConfigOperationResultResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetCheckConfigOperationResult_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="AbortCheckConfigOperation">
    	<wsdl:documentation>Aborts asynchronous checkconfig operation.</wsdl:documentation>
    	<wsdl:input message="tns:AbortCheckConfigOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:AbortCheckConfigOperationResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:AbortCheckConfigOperation_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="StartValidateConnectionOperation">
    	<wsdl:documentation>Runs connection validation asynchronously on the specified graph and returns a handle to obtain results later or even abort the operation.</wsdl:documentation>
    	<wsdl:input message="tns:StartValidateConnectionOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:StartValidateConnectionOperationResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:StartValidateConnectionOperation_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetValidateConnectionOperationResult">
    	<wsdl:documentation>Returns list of problems detected in the graph by asynchronously executed connection validation.</wsdl:documentation>
    	<wsdl:input message="tns:GetValidateConnectionOperationResultRequest"></wsdl:input>
    	<wsdl:output message="tns:GetValidateConnectionOperationResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetValidateConnectionOperationResult_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="AbortValidateConnectionOperation">
    	<wsdl:documentation>Aborts asynchronous connection validation.</wsdl:documentation>
    	<wsdl:input message="tns:AbortValidateConnectionOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:AbortValidateConnectionOperationResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:AbortValidateConnectionOperation_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GenerateOAuth2AuthorizationUrl">
    	<wsdl:documentation>Returns authorization URL for specified OAuth2 connection.</wsdl:documentation>
    	<wsdl:input message="tns:GenerateOAuth2AuthorizationUrlRequest"></wsdl:input>
    	<wsdl:output message="tns:GenerateOAuth2AuthorizationUrlResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GenerateOAuth2AuthorizationUrl_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="IsOAuth2ConnectionAuthorized">
    	<wsdl:documentation>Returns authorization status for specified OAuth2 connection.</wsdl:documentation>
    	<wsdl:input message="tns:IsOAuth2ConnectionAuthorizedRequest"></wsdl:input>
    	<wsdl:output message="tns:IsOAuth2ConnectionAuthorizedResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:IsOAuth2ConnectionAuthorized_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GenerateOAuth2DefaultRedirectUrl">
    	<wsdl:documentation>Returns default redirect URL for current server.</wsdl:documentation>
    	<wsdl:input message="tns:GenerateOAuth2DefaultRedirectUrlRequest"></wsdl:input>
    	<wsdl:output message="tns:GenerateOAuth2DefaultRedirectUrlResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GenerateOAuth2DefaultRedirectUrl_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetEdgeDebugData">
    	<wsdl:documentation>Returns a edge debug data for specified transformation graph and edge. It's expected, that specified graph has been executed recently and it's already finished.
Returns handler which represents data stream.
</wsdl:documentation>
    	<wsdl:input message="tns:GetEdgeDebugDataRequest"></wsdl:input>
    	<wsdl:output message="tns:GetEdgeDebugDataResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetEdgeDebugData_faultMsg"></wsdl:fault>
        </wsdl:operation>
        
    <wsdl:operation name="PrepareDataView">
        <wsdl:documentation>Answers handle that represents data stream of &quot;view data on component&quot; records. </wsdl:documentation>
        <wsdl:input message="tns:PrepareDataViewRequest"></wsdl:input>
        <wsdl:output message="tns:PrepareDataViewResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetViewData_faultMsg"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="FetchDataView">
        <wsdl:documentation>Answers next page from data prepared in PrepareDataView operation.</wsdl:documentation>
        <wsdl:input message="tns:FetchDataViewRequest"></wsdl:input>
        <wsdl:output message="tns:FetchDataViewResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetViewData_faultMsg"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DisposeDataView">
        <wsdl:documentation>Disposes all resources created in PrepareDataView operation.</wsdl:documentation>
        <wsdl:input message="tns:DisposeDataViewRequest"></wsdl:input>
        <wsdl:output message="tns:DisposeDataViewResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetViewData_faultMsg"></wsdl:fault>
    </wsdl:operation>

    <wsdl:operation name="echo">
    	<wsdl:documentation>Simple method intended for testing of this WS endpoint. Accepts one String parameter which is without changes sent as response.</wsdl:documentation>
    	<wsdl:input message="tns:echoRequest"></wsdl:input>
    	<wsdl:output message="tns:echoResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:echoFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="KillJob">
        <wsdl:documentation>Asks system to kill a job with given run ID. All child jobs (if any) are killed, too. Job result is answered as outcome of the operation: should be ABORTED if the job was running, FINISHED_OK or ERROR otherwise.</wsdl:documentation>
    	<wsdl:input message="tns:KillJobRequest"></wsdl:input>
    	<wsdl:output message="tns:KillJobResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:KillJobFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="KillJobs">
    	<wsdl:documentation>Kills running jobs specified by filter. Returns num of successfully killed jobs.</wsdl:documentation>
    	<wsdl:input message="tns:KillJobsRequest"></wsdl:input>
    	<wsdl:output message="tns:KillJobsResponse1"></wsdl:output>
            <wsdl:fault name="fault" message="tns:KillJobsFault"></wsdl:fault>
        </wsdl:operation>    
    <wsdl:operation name="GetEdgeDebugInfoList">
        <wsdl:documentation>Answers information about edge debug data locations corresponding to given sandbox code, job file, run ID and edge ID.</wsdl:documentation>
        <wsdl:input message="tns:GetEdgeDebugInfoListRequest"></wsdl:input>
        <wsdl:output message="tns:GetEdgeDebugInfoListResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetEdgeDebugInfoListFault"></wsdl:fault>
    </wsdl:operation>

    <wsdl:operation name="CreateSandbox">
        <wsdl:documentation>Asks system to create a new sandbox with given properties and locations (if any).
        </wsdl:documentation>
        <wsdl:input message="tns:CreateSandboxRequest"></wsdl:input>
        <wsdl:output message="tns:CreateSandboxResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:CreateSandboxFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteSandbox">
        <wsdl:documentation>Asks system to delete sandbox with given code.
        </wsdl:documentation>
        <wsdl:input message="tns:DeleteSandboxRequest"></wsdl:input>
        <wsdl:output message="tns:DeleteSandboxResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:DeleteSandboxFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="IsCluster">
        <wsdl:documentation>Answers whether receiving server is configured to be a cluster node. Answers 'false' for a standalone server.</wsdl:documentation>
        <wsdl:input message="tns:IsClusterRequest" />
        <wsdl:output message="tns:IsClusterResponse" />
    </wsdl:operation>
    <wsdl:operation name="IsPartitioning">
        <wsdl:documentation>Answers whether receiving server is allowed to run partitioned jobs. Depends on the license.</wsdl:documentation>
        <wsdl:input message="tns:IsPartitioningRequest" />
        <wsdl:output message="tns:IsPartitioningResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetTimeZone">
        <wsdl:documentation>Answers default time zone of the server.</wsdl:documentation>
        <wsdl:input message="tns:GetTimeZoneRequest" />
        <wsdl:output message="tns:GetTimeZoneResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetClusterNodesInfo">
        <wsdl:documentation>Answers list of available cluster nodes known to the receiver. Answers an empty list in case of a standalone server.</wsdl:documentation>
        <wsdl:input message="tns:GetClusterNodesInfo" />
        <wsdl:output message="tns:GetClusterNodesInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetChildJobs">
    	<wsdl:documentation>Returns list of children for the given runId.</wsdl:documentation>
    	<wsdl:input message="tns:GetChildJobsRequest"></wsdl:input>
    	<wsdl:output message="tns:GetChildJobsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AnalyseGraph">
    	<wsdl:documentation>This method analyses the given graph and returns transformation plan (important specially for clustered/partitioned graphs) or null if the referenced graph is not clustered or analysis failed.</wsdl:documentation>
    	<wsdl:input message="tns:AnalyseGraphRequest"></wsdl:input>
    	<wsdl:output message="tns:AnalyseGraphResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EncryptText">
    	<wsdl:documentation>Encrypt the given message. An algorithm and seed are set in server configuration. Encrypted messages are used to encrypt secure parameters (e.g. passwords) in transformations. Throws exception if master password has not been set.</wsdl:documentation>
    	<wsdl:input message="tns:EncryptTextRequest"></wsdl:input>
    	<wsdl:output message="tns:EncryptTextResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsSecureParamPasswdAvailable">
    	<wsdl:documentation>Check if the master password (a seed) for encrypting/decrypting has been set.</wsdl:documentation>
    	<wsdl:input message="tns:IsSecureParamPasswdAvailableRequest"></wsdl:input>
    	<wsdl:output message="tns:IsSecureParamPasswdAvailableResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateSecureParamPasswd">
        <wsdl:documentation>Updates master password (a seed) for encrypting/decrypting.</wsdl:documentation>
        <wsdl:input message="tns:UpdateSecureParamPasswdRequest" />
        <wsdl:output message="tns:UpdateSecureParamPasswdResponse" />
        <wsdl:fault name="fault" message="tns:UpdateSecureParamPasswdFault" />
    </wsdl:operation>
    
    <wsdl:operation name="ExportServerConfiguration">
        <wsdl:documentation>Anwers server configuration (i.e. users, sandboxes, etc.) as an XML file. The content of the file depends on the operation options.</wsdl:documentation>
    	<wsdl:input message="tns:ExportServerConfigurationRequest"></wsdl:input>
    	<wsdl:output message="tns:ExportServerConfigurationResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:ExportServerConfigurationFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="ImportServerConfiguration">
        <wsdl:documentation>Performs import of given server configuration XML file. The import process is driven by operation options. An XML report is answered as operation's outcome.</wsdl:documentation>
    	<wsdl:input message="tns:ImportServerConfigurationRequest"></wsdl:input>
    	<wsdl:output message="tns:ImportServerConfigurationResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:ImportServerConfigurationFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="DecryptText">
    <wsdl:documentation>Decrypt the given message. An algorithm and seed are set in server configuration. Throws exception if master password has not been set.</wsdl:documentation>
    	<wsdl:input message="tns:DecryptTextRequest"></wsdl:input>
    	<wsdl:output message="tns:DecryptTextResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCloverVersion">
        <wsdl:documentation>Answers version string of the server.</wsdl:documentation>
        <wsdl:input message="tns:GetCloverVersionRequest" />
        <wsdl:output message="tns:GetCloverVersionResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetDataSetMetadata">
	   <wsdl:input message="tns:GetDataSetMetadataRequest"></wsdl:input>
	   <wsdl:output message="tns:GetDataSetMetadataResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetDataSetMetadataFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEdgeDebugMetadata">
	   <wsdl:input message="tns:GetEdgeDebugMetadataRequest"></wsdl:input>
	   <wsdl:output message="tns:GetEdgeDebugMetadataResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:GetEdgeDebugMetadataFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetJobExecutionHierarchy">
        <wsdl:documentation>Returns execution info for given run ID along with all of its direct or indirect descendants.</wsdl:documentation>
        <wsdl:input message="tns:GetJobExecutionHierarchyRequest" />
        <wsdl:output message="tns:GetJobExecutionHierarchyResponse" />
        <wsdl:fault name="fault" message="tns:GetJobExecutionHierarchyFault" />
    </wsdl:operation>
    <wsdl:operation name="ValidateClasspath">
    	<wsdl:input message="tns:ValidateClasspathRequest"></wsdl:input>
    	<wsdl:output message="tns:ValidateClasspathResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:ValidateClasspathFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="SynchronizeStorageIndex">
        <wsdl:documentation>Compares client file index to server file index. Returns List of differences.</wsdl:documentation>
    	<wsdl:input message="tns:SynchronizeStorageIndexRequest"></wsdl:input>
    	<wsdl:output message="tns:SynchronizeStorageIndexResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:SynchronizeStorageIndexFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="StartPropagateMetadataOperation">
    	<wsdl:input message="tns:StartPropagateMetadataOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:StartPropagateMetadataOperationResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:StartPropagateMetadataOperationFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="StartPropagateDataConnectorMetadataOperation">
    	<wsdl:input message="tns:StartPropagateDataConnectorMetadataOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:StartPropagateMetadataOperationResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:StartPropagateMetadataOperationFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="GetPropagateMetadataOperationResult">
    	<wsdl:input message="tns:GetPropagateMetadataOperationResultRequest"></wsdl:input>
    	<wsdl:output message="tns:GetPropagateMetadataOperationResultResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:GetPropagateMetadataOperationResultFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="AbortPropagateMetadataOperation">
    	<wsdl:input message="tns:AbortPropagateMetadataOperationRequest"></wsdl:input>
    	<wsdl:output message="tns:AbortPropagateMetadataOperationResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:AbortPropagateMetadataOperationFault"></wsdl:fault>
        </wsdl:operation>
	<wsdl:operation name="PropagateMetadata">
    	<wsdl:input message="tns:PropagateMetadataRequest"></wsdl:input>
    	<wsdl:output message="tns:PropagateMetadataResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:PropagateMetadataFault"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="FetchJndiTree">
        <wsdl:documentation>Reads content of the JNDI tree</wsdl:documentation>
        <wsdl:input message="tns:FetchJndiTreeRequest"></wsdl:input>
        <wsdl:output message="tns:FetchJndiTreeResponse"></wsdl:output>
        <wsdl:fault name="fault" message="tns:FetchJndiTreeFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetDefaults">
    	<wsdl:input message="tns:GetDefaultsRequest"></wsdl:input>
    	<wsdl:output message="tns:GetDefaultsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetExecutionLogEncoding">
    	<wsdl:input message="tns:GetExecutionLogEncodingRequest"></wsdl:input>
    	<wsdl:output message="tns:GetExecutionLogEncodingResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PublishRestJob">
        <wsdl:documentation>Publishes given REST job - i.e. it is made ready for HTTP invocations.
        </wsdl:documentation>
        <wsdl:input message="tns:PublishRestJobRequest" />
        <wsdl:output message="tns:PublishRestJobResponse" />
        <wsdl:fault name="fault" message="tns:PublishRestJobFault" />
    </wsdl:operation>
    <wsdl:operation name="UnpublishRestJob">
        <wsdl:documentation>Unpublishes given REST job if it has bee published before.
        </wsdl:documentation>
        <wsdl:input message="tns:UnpublishRestJobRequest" />
        <wsdl:output message="tns:UnpublishRestJobResponse" />
        <wsdl:fault name="fault" message="tns:PublishRestJobFault" />
    </wsdl:operation>
    <wsdl:operation name="GetPublishedRestJobs">
        <wsdl:documentation>Answers list of published REST jobs.
        </wsdl:documentation>
        <wsdl:input message="tns:GetPublishedRestJobsRequest" />
        <wsdl:output message="tns:GetPublishedRestJobsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetAllPublishedRestJobs">
        <wsdl:documentation>Answers list of all published REST jobs, even those with ssl configuration if needed.
        </wsdl:documentation>
        <wsdl:input message="tns:GetAllPublishedRestJobsRequest" />
        <wsdl:output message="tns:GetPublishedRestJobsResponse" />
    </wsdl:operation>
    <wsdl:operation name="IsRestJobPublishable">
        <wsdl:documentation>Answers if given REST job can be published
        </wsdl:documentation>
        <wsdl:input message="tns:IsRestJobPublishableRequest" />
        <wsdl:output message="tns:IsRestJobPublishableResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetServerPlatform">
    	<wsdl:documentation>Returns server platform (win/linux/mac).</wsdl:documentation>
    	<wsdl:input message="tns:GetServerPlatformRequest"></wsdl:input>
    	<wsdl:output message="tns:GetServerPlatformResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSecret">
    	<wsdl:documentation>Returns secret.</wsdl:documentation>
    	<wsdl:input message="tns:GetSecretRequest"></wsdl:input>
    	<wsdl:output message="tns:GetSecretResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRestJobUrlInfo">
        <wsdl:documentation>Returns information about the base URL where REST jobs are published.
        </wsdl:documentation>
        <wsdl:input message="tns:GetRestJobUrlInfoRequest" />
        <wsdl:output message="tns:GetRestJobUrlInfoResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetAWSCredentials">
        <wsdl:documentation>Returns default Amazon AWS credentials.
        </wsdl:documentation>
        <wsdl:input message="tns:GetAWSCredentialsRequest" />
        <wsdl:output message="tns:GetAWSCredentialsResponse" />
    </wsdl:operation>
    <wsdl:operation name="RefreshAWSCredentials">
        <wsdl:documentation>Refreshes default Amazon AWS credentials.
        </wsdl:documentation>
        <wsdl:input message="tns:RefreshAWSCredentialsRequest" />
        <wsdl:output message="tns:RefreshAWSCredentialsResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetSystemProperties">
        <wsdl:documentation>Answers list of Java Virtual Machine system properties</wsdl:documentation>
        <wsdl:input message="tns:GetSystemPropertiesRequest" />
        <wsdl:output message="tns:GetSystemPropertiesResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetServerLog">
        <wsdl:documentation>Returns a fragment of server log</wsdl:documentation>
        <wsdl:input message="tns:GetServerLogRequest" />
        <wsdl:output message="tns:GetServerLogResponse" />
        <wsdl:fault name="fault" message="tns:GetServerLogFault" />
        </wsdl:operation>
    <wsdl:operation name="GetClusterNodeId">
    	<wsdl:input message="tns:GetClusterNodeIdRequest"></wsdl:input>
    	<wsdl:output message="tns:GetClusterNodeIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSandboxRoot">
    	<wsdl:input message="tns:GetSandboxRootRequest"></wsdl:input>
    	<wsdl:output message="tns:GetSandboxRootResponse"></wsdl:output>
    	<wsdl:fault name="fault" message="tns:GetSandboxRootFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLibraries">
    	<wsdl:documentation>Returns the list of all Clover libraries - a list of LibraryInfo data structures, which contain detail info about each library. </wsdl:documentation>
    	<wsdl:input message="tns:GetLibrariesRequest"></wsdl:input>
    	<wsdl:output message="tns:GetLibrariesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSandboxesAndLibraries">
    	<wsdl:documentation>Returns the list of all Sandboxes and Libraries (if the user has permission for libraries administration) </wsdl:documentation>
    	<wsdl:input message="tns:GetSandboxesAndLibrariesRequest"></wsdl:input>
    	<wsdl:output message="tns:GetSandboxesAndLibrariesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDataSets">
    	<wsdl:input message="tns:GetDataSetsRequest"></wsdl:input>
    	<wsdl:output message="tns:GetDataSetsResponse"></wsdl:output>
    </wsdl:operation>
  	</wsdl:portType>

    <wsdl:binding name="CloverServerWS_port"
    	type="tns:CloverServerWS">

    	<soap:binding style="document"
    		transport="http://schemas.xmlsoap.org/soap/http" />
    	<wsdl:operation name="Login">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/Login" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetSandboxes">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSandboxes" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	
    	<wsdl:operation name="GetSandboxesAndLibraries">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSandboxesAndLibraries" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	
    		<wsdl:operation name="GetLibraries">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetLibraries" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetSandbox">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSandbox" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetUser">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetUser" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="DownloadFileContent">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DownloadFileContent" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="Logout">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/Logout" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="ListFiles">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/ListFiles" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="UploadFileContent">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/UploadFileContent" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CopySandboxFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CopySandboxFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CopyFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CopyFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CreateSandboxFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CreateSandboxFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CreateFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CreateFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CreateFolder">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CreateFolder" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="DeleteFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DeleteFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="MoveSandboxFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/MoveSandboxFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="MoveFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/MoveFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="RenameSandboxFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/RenameSandboxFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="RenameFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/RenameFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetFile">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetFile" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="DeleteDirectory">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DeleteDirectory" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="ExecuteGraph">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/ExecuteGraph" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetGraphExecutionLog">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetGraphExecutionLog" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="SetLastModified">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/SetLastModified" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetGraphTracking">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetGraphTracking" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetGraphExecutionStatus">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetGraphExecutionStatus" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetJobExecutionStatus">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetJobExecutionStatus" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="KillGraph">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/KillGraph" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetCheckConfigResult">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetCheckConfigResult" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="StartCheckConfigOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/StartCheckConfigOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetCheckConfigOperationResult">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetCheckConfigOperationResult" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="AbortCheckConfigOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/AbortCheckConfigOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="StartValidateConnectionOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/StartValidateConnectionOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetValidateConnectionOperationResult">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetValidateConnectionOperationResult" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="AbortValidateConnectionOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/AbortValidateConnectionOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="GenerateOAuth2AuthorizationUrl">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GenerateOAuth2AuthorizationUrl" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="IsOAuth2ConnectionAuthorized">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/IsOAuth2ConnectionAuthorized" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="GenerateOAuth2DefaultRedirectUrl">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GenerateOAuth2DefaultRedirectUrl" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="GetEdgeDebugData">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetEdgeDebugData" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="PrepareDataView">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/PrepareDataView" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="FetchDataView">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/FetchDataView" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="DisposeDataView">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DisposeDataView" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="echo">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/echo" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="KillJob">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/KillJob" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="KillJobs">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/KillJobs" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetEdgeDebugInfoList">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetEdgeDebugInfoList" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="CreateSandbox">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/CreateSandbox" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="DeleteSandbox">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DeleteSandbox" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="IsCluster">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/IsCluster" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>

    	<wsdl:operation name="IsPartitioning">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/IsPartitioning" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>

    	<wsdl:operation name="GetTimeZone">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetTimeZone" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetClusterNodesInfo">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetClusterNodesInfo" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetChildJobs">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetChildJobs" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="AnalyseGraph">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/AnalyseGraph" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>

    	</wsdl:operation>
    	<wsdl:operation name="EncryptText">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/EncryptText" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>

    	<wsdl:operation name="IsSecureParamPasswdAvailable">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/IsSecureParamPasswdAvailable" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>

    	</wsdl:operation>

    	<wsdl:operation name="UpdateSecureParamPasswd">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/UpdateSecureParamPasswd" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>

    	<wsdl:operation name="ExportServerConfiguration">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/ExportServerConfiguration" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>

    	</wsdl:operation>
    	<wsdl:operation name="ImportServerConfiguration">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/ImportServerConfiguration" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>

    	</wsdl:operation>
    	<wsdl:operation name="DecryptText">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/DecryptText" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>

    	<wsdl:operation name="GetCloverVersion">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetCloverVersion" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetDataSetMetadata">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetDataSetMetadata" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetEdgeDebugMetadata">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetEdgeDebugMetadata" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetJobExecutionHierarchy">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetJobExecutionHierarchy" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="ValidateClasspath">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/ValidateClasspath" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="SynchronizeStorageIndex">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/SynchronizeStorageIndex" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="StartPropagateMetadataOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/StartPropagateMetadataOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	
    	<wsdl:operation name="StartPropagateDataConnectorMetadataOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/StartPropagateDataConnectorMetadataOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	
    	<wsdl:operation name="GetPropagateMetadataOperationResult">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetPropagateMetadataOperationResult" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="AbortPropagateMetadataOperation">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/AbortPropagateMetadataOperation" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="PropagateMetadata">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/PropagateMetadata" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="FetchJndiTree">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/FetchJndiTree" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetDefaults">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetDefaults" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetExecutionLogEncoding">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetExecutionLogEncoding" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="PublishRestJob">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/PublishRestJob" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="UnpublishRestJob">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/UnpublishRestJob" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">

    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetPublishedRestJobs">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetPublishedRestJobs" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetAllPublishedRestJobs">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetAllPublishedRestJobs" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="IsRestJobPublishable">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/IsRestJobPublishable" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetServerPlatform">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetServerPlatform" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetSecret">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSecret" />
    			
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetRestJobUrlInfo">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetRestJobUrlInfo" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetAWSCredentials">

    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetAWSCredentials" />
    		<wsdl:input>

    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>

    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="RefreshAWSCredentials">
    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/RefreshAWSCredentials" />
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetSystemProperties">
    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSystemProperties" />
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetServerLog">
    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetServerLog" />
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">
    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
    	<wsdl:operation name="GetClusterNodeId">
    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetClusterNodeId" />
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    	</wsdl:operation>
    	<wsdl:operation name="GetSandboxRoot">
    		<soap:operation
    			soapAction="http://server.cloveretl.com/CloverServerWS/GetSandboxRoot" />
    		<wsdl:input>
    			<soap:body use="literal" />
    		</wsdl:input>
    		<wsdl:output>
    			<soap:body use="literal" />
    		</wsdl:output>
    		<wsdl:fault name="fault">
    			<soap:fault use="literal" name="fault" />
    		</wsdl:fault>
    	</wsdl:operation>
		<wsdl:operation name="GetDataSets">
			<soap:operation
				soapAction="http://server.cloveretl.com/CloverServerWS/GetDataSets" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="CloverServerWS_service">
    <wsdl:port binding="tns:CloverServerWS_port" name="CloverServerWS_port">
      <soap:address location="http://foo"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
